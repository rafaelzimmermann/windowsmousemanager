const data = ""{\"1.wsf\":\"PGpvYiBpZD0idGVzdCI+DQoJPHNjcmlwdCBsYW5ndWFnZT0iVkJTY3JpcHQiIHNyYz0idXRpbC52YnMiIC8+DQoJPHNjcmlwdCBsYW5ndWFnZT0iVkJTY3JpcHQiIHNyYz0icmVnVXRpbC52YnMiIC8+DQoJPHNjcmlwdCBsYW5ndWFnZT0iVkJTY3JpcHQiPg0KICAJQ2hlY2taZXJvQXJncygidHlwZSBBIGFzIGZpcnN0IGFyZyEhIikNCgkJDQoJCURldGVybWluZU9TQXJjaGl0ZWN0dXJlKCkNCgkJTG9hZFJlZ2lzdHJ5SW1wbGVtZW50YXRpb25CeU9TQXJjaGl0ZWN0dXJlKCkNCgkNCgkJJ09uIEVycm9yIFJlc3VtZSBOZXh0DQoNCiAgICBEaW0ga2V5OiBrZXkgPSAiSEtDVVxTb2Z0d2FyZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxFeHBsb3JlclxVc2VyIFNoZWxsIEZvbGRlcnMiDQogICAgRGltIHZhbHVlOiB2YWx1ZSA9ICJBcHBEYXRhIg0KICAgIA0KICAgIFBhcnNlSGl2ZUFuZFN1YktleSBrZXksIGNvbnN0SGl2ZSwgc3RyU3ViS2V5DQogICAgDQogICAgR2V0RXhwYW5kZWRTdHJpbmdWYWx1ZSBjb25zdEhpdmUsIHN0clN1YktleSwgdmFsdWUsIGV4UmVzdWx0DQogICAgV3JpdGVMaW5lICJHZXRFeHBhbmRlZFN0cmluZ1ZhbHVlOiAiICYgZXhSZXN1bHQNCg0KICAgIEdldFN0cmluZ1ZhbHVlIGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCB2YWx1ZSwgblJlc3VsdA0KICAgIFdyaXRlTGluZSAiR2V0U3RyaW5nVmFsdWU6ICIgJiBuUmVzdWx0DQoJCQ0KICAgIHNldCB3cyA9IGNyZWF0ZW9iamVjdCgiV3NjcmlwdC5zaGVsbCIpDQogICAgV3JpdGVMaW5lICJyZWdyZWFkOiAiICYgd3MucmVncmVhZChrZXkgJiAiXEFwcERhdGEiKQ0KCTwvc2NyaXB0Pg0KPC9qb2I+\",\"ArchitectureAgnosticRegistry.vbs\":\"JyBOb3Rlczogd2FudGVkIHRvIGltcGxlbWVudCB0aGlzIHVzaW5nIGEgY2xhc3MgYnV0Og0KJyAxLiBObyBtYXR0ZXIgd2hhdCBJIGRpZCBJIGNvdWxkIG5vdCBhc3NpZ24gdGhlIHJlc3VsdCBvZiBHZXRPYmplY3QgdG8gYSBwcml2YXRlIG1lbWJlcg0KJyAyLiBJdCBsb29rcyBhcyBpZiBhbGwgbWV0aG9kcyB3ZXJlIHRyZWF0ZWQgYXMgc3VicyBmcm9tIHRoZSBvdXRzaWRlIHdvcmxkIHdoaWNoIGlzIG5vdCBnb29kIHNpbmNlIA0KJyBzb21lIG9mIHRoZXNlIG5lZWQgdG8gcmV0dXJuIGEgdmFsdWUNCicNCg0KU2V0IHByaXZhdGVfb1JlZyA9IEdldE9iamVjdCgid2lubWdtdHM6XHJvb3RcZGVmYXVsdDpTdGRSZWdQcm92IikJCQ0KDQpGdW5jdGlvbiBTZXRTdHJpbmdWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBzdHJWYWx1ZSkJDQoJU2V0U3RyaW5nVmFsdWUgID0gcHJpdmF0ZV9vUmVnLlNldFN0cmluZ1ZhbHVlKGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZU5hbWUsIHN0clZhbHVlKQkNCkVuZCBGdW5jdGlvbg0KDQpTdWIgR2V0U3RyaW5nVmFsdWUoY29uc3RIaXZlLCBzdHJLZXksIHN0clZhbHVlTmFtZSwgc3RyVmFsdWUpDQoJcHJpdmF0ZV9vUmVnLkdldFN0cmluZ1ZhbHVlIGNvbnN0SGl2ZSwgc3RyS2V5LCBzdHJWYWx1ZU5hbWUsIHN0clZhbHVlDQpFbmQgU3ViDQoNCkZ1bmN0aW9uIFNldEV4cGFuZGVkU3RyaW5nVmFsdWUoY29uc3RIaXZlLCBzdHJTdWJLZXksIHN0clZhbHVlTmFtZSwgc3RyVmFsdWUpDQoJU2V0RXhwYW5kZWRTdHJpbmdWYWx1ZSA9IHByaXZhdGVfb1JlZy5TZXRFeHBhbmRlZFN0cmluZ1ZhbHVlKGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZU5hbWUsIHN0clZhbHVlKQ0KRW5kIEZ1bmN0aW9uDQoNClN1YiBHZXRFeHBhbmRlZFN0cmluZ1ZhbHVlKGNvbnN0SGl2ZSwgc3RyS2V5LCBzdHJWYWx1ZU5hbWUsIHN0clZhbHVlKQ0KCXByaXZhdGVfb1JlZy5HZXRFeHBhbmRlZFN0cmluZ1ZhbHVlIGNvbnN0SGl2ZSwgc3RyS2V5LCBzdHJWYWx1ZU5hbWUsIHN0clZhbHVlDQpFbmQgU3ViDQoNCkZ1bmN0aW9uIFNldE11bHRpU3RyaW5nVmFsdWUoY29uc3RIaXZlLCBzdHJTdWJLZXksIHN0clZhbHVlTmFtZSwgYXJyVmFsdWUpDQoJU2V0TXVsdGlTdHJpbmdWYWx1ZSA9IHByaXZhdGVfb1JlZy5TZXRNdWx0aVN0cmluZ1ZhbHVlKGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZU5hbWUsIGFyclZhbHVlKQ0KRW5kIEZ1bmN0aW9uDQoNClN1YiBHZXRNdWx0aVN0cmluZ1ZhbHVlKGNvbnN0SGl2ZSwgc3RyS2V5LCBzdHJWYWx1ZU5hbWUsIGFyclN0clZhbHVlKQ0KCXByaXZhdGVfb1JlZy5HZXRNdWx0aVN0cmluZ1ZhbHVlIGNvbnN0SGl2ZSwgc3RyS2V5LCBzdHJWYWx1ZU5hbWUsIGFyclN0clZhbHVlDQpFbmQgU3ViIA0KDQpGdW5jdGlvbiBTZXREV09SRFZhbHVlKGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZU5hbWUsIGFyclZhbHVlKQ0KCVNldERXT1JEVmFsdWUgPSBwcml2YXRlX29SZWcuU2V0RFdPUkRWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBhcnJWYWx1ZSkNCkVuZCBGdW5jdGlvbg0KDQpTdWIgR2V0RFdPUkRWYWx1ZShjb25zdEhpdmUsIHN0cktleSwgc3RyVmFsdWVOYW1lLCBpbnREV29yZFZhbHVlKQ0KCXByaXZhdGVfb1JlZy5HZXREV09SRFZhbHVlIGNvbnN0SGl2ZSwgc3RyS2V5LCBzdHJWYWx1ZU5hbWUsIGludERXb3JkVmFsdWUNCkVuZCBTdWINCg0KRnVuY3Rpb24gU2V0UVdPUkRWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBzdHJRV29yZFZhbHVlKQ0KCVNldFFXT1JEVmFsdWUgPSBwcml2YXRlX29SZWcuU2V0UVdPUkRWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBzdHJRV29yZFZhbHVlKQ0KRW5kIEZ1bmN0aW9uDQoNClN1YiBHZXRRV09SRFZhbHVlKGNvbnN0SGl2ZSwgc3RyS2V5LCBzdHJWYWx1ZU5hbWUsIGludFFXb3JkVmFsdWUpDQoJcHJpdmF0ZV9vUmVnLkdldFFXT1JEVmFsdWUgY29uc3RIaXZlLCBzdHJLZXksIHN0clZhbHVlTmFtZSwgaW50UVdvcmRWYWx1ZQ0KRW5kIFN1Yg0KDQpGdW5jdGlvbiBTZXRCaW5hcnlWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBhcnJWYWx1ZSkNCglTZXRCaW5hcnlWYWx1ZSA9IHByaXZhdGVfb1JlZy5TZXRCaW5hcnlWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBhcnJWYWx1ZSkNCkVuZCBGdW5jdGlvbg0KDQpTdWIgR2V0QmluYXJ5VmFsdWUoY29uc3RIaXZlLCBzdHJLZXksIHN0clZhbHVlTmFtZSwgYXJyQmluYXJ5VmFsdWUpDQoJcHJpdmF0ZV9vUmVnLkdldEJpbmFyeVZhbHVlIGNvbnN0SGl2ZSwgc3RyS2V5LCBzdHJWYWx1ZU5hbWUsIGFyckJpbmFyeVZhbHVlDQpFbmQgU3ViDQoNCkZ1bmN0aW9uIEVudW1LZXkoY29uc3RIaXZlLCBzdHJTdWJLZXksIGFycktleU5hbWVzKQ0KCUVudW1LZXkgPSBwcml2YXRlX29SZWcuRW51bUtleShjb25zdEhpdmUsIHN0clN1YktleSwgYXJyS2V5TmFtZXMpDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gRW51bVZhbHVlcyhjb25zdEhpdmUsIHN0clN1YktleSwgYXJyVmFsdWVOYW1lcywgYXJyVmFsdWVUeXBlcykNCglFbnVtVmFsdWVzID0gcHJpdmF0ZV9vUmVnLkVudW1WYWx1ZXMoY29uc3RIaXZlLCBzdHJTdWJLZXksIGFyclZhbHVlTmFtZXMsIGFyclZhbHVlVHlwZXMpDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gQ3JlYXRlS2V5KGNvbnN0SGl2ZSwgc3RyU3ViS2V5KQ0KCUNyZWF0ZUtleSA9IHByaXZhdGVfb1JlZy5DcmVhdGVLZXkoY29uc3RIaXZlLCBzdHJTdWJLZXkpDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gRGVsZXRlS2V5KGNvbnN0SGl2ZSwgc3RyU3ViS2V5KQ0KCURlbGV0ZUtleSA9IHByaXZhdGVfb1JlZy5EZWxldGVLZXkoY29uc3RIaXZlLCBzdHJTdWJLZXkpDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gRGVsZXRlVmFsdWUoY29uc3RIaXZlLCBzdHJTdWJLZXksIHN0clZhbHVlKQ0KCURlbGV0ZVZhbHVlID0gcHJpdmF0ZV9vUmVnLkRlbGV0ZVZhbHVlKGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZSkNCkVuZCBGdW5jdGlvbg0K\",\"ArchitectureSpecificRegistry.vbs\":\"JyBOb3Rlczogd2FudGVkIHRvIGltcGxlbWVudCB0aGlzIHVzaW5nIGEgY2xhc3MgYnV0Og0KJyAxLiBObyBtYXR0ZXIgd2hhdCBJIGRpZCBJIGNvdWxkIG5vdCBhc3NpZ24gdGhlIHJlc3VsdCBvZiBHZXRPYmplY3QgdG8gYSBwcml2YXRlIG1lbWJlcg0KJyAyLiBJdCBsb29rcyBhcyBpZiBhbGwgbWV0aG9kcyB3ZXJlIHRyZWF0ZWQgYXMgc3VicyBmcm9tIHRoZSBvdXRzaWRlIHdvcmxkIHdoaWNoIGlzIG5vdCBnb29kIHNpbmNlIA0KJyBzb21lIG9mIHRoZXNlIG5lZWQgdG8gcmV0dXJuIGEgdmFsdWUNCg0KJyBzaG91bGQgYmUgcmVtb3ZlZCB3aGVuIG1pZ3JhdGlvbiBpcyBjb21wbGV0ZQ0KU2V0IHByaXZhdGVfb1JlZyA9IEdldE9iamVjdCgid2lubWdtdHM6XHJvb3RcZGVmYXVsdDpTdGRSZWdQcm92IikJCQ0KDQpTZXQgcHJpdmF0ZV9vQ3R4ID0gQ3JlYXRlT2JqZWN0KCJXYmVtU2NyaXB0aW5nLlNXYmVtTmFtZWRWYWx1ZVNldCIpDQpwcml2YXRlX29DdHguQWRkICJfX1Byb3ZpZGVyQXJjaGl0ZWN0dXJlIiwgQ0ludChPU0FyY2hpdGVjdHVyZSkNCg0KU2V0IHByaXZhdGVfb0xvY2F0b3IgPSBDcmVhdGVPYmplY3QoIldiZW1zY3JpcHRpbmcuU1diZW1Mb2NhdG9yIikNClNldCBwcml2YXRlX29TZXJ2aWNlcyA9IHByaXZhdGVfb0xvY2F0b3IuQ29ubmVjdFNlcnZlcigiLiIsICJyb290XGRlZmF1bHQiLCIiLCIiLCwsLHByaXZhdGVfb0N0eCkNClNldCBwcml2YXRlX29SZWdTcGVjaWZpYyA9IHByaXZhdGVfb1NlcnZpY2VzLkdldCgiU3RkUmVnUHJvdiIpIA0KDQpGdW5jdGlvbiBDaGVja0FjY2VzcyhoRGVmS2V5LHNTdWJLZXlOYW1lLHVSZXF1aXJlZCwgYkdyYW50ZWQgKQkNCglTZXQgSW5wYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5NZXRob2RzXygiQ2hlY2tBY2Nlc3MiKS5JbnBhcmFtZXRlcnMNCgkNCglJbnBhcmFtcy5oRGVmS2V5ID0gaERlZktleQ0KCQ0KCUlucGFyYW1zLnNTdWJLZXlOYW1lID0gc1N1YktleU5hbWUNCgkNCglJbnBhcmFtcy51UmVxdWlyZWQgPSB1UmVxdWlyZWQNCgkJDQoJc2V0IE91dHBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLkV4ZWNNZXRob2RfKCJDaGVja0FjY2VzcyIsIElucGFyYW1zLCxwcml2YXRlX29DdHgpDQoJDQoJYkdyYW50ZWQgPSBPdXRwYXJhbXMuYkdyYW50ZWQNCgkNCg0KCUNoZWNrQWNjZXNzID0gMA0KCQ0KRW5kIEZ1bmN0aW9uDQoNCkZ1bmN0aW9uIENyZWF0ZUtleShoRGVmS2V5LHNTdWJLZXlOYW1lKQkNCglTZXQgSW5wYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5NZXRob2RzXygiQ3JlYXRlS2V5IikuSW5wYXJhbWV0ZXJzDQoJDQoJSW5wYXJhbXMuaERlZktleSA9IGhEZWZLZXkNCgkNCglJbnBhcmFtcy5zU3ViS2V5TmFtZSA9IHNTdWJLZXlOYW1lDQoJCQ0KCXNldCBPdXRwYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5FeGVjTWV0aG9kXygiQ3JlYXRlS2V5IiwgSW5wYXJhbXMsLHByaXZhdGVfb0N0eCkNCgkNCg0KCUNyZWF0ZUtleSA9IDANCgkNCkVuZCBGdW5jdGlvbg0KDQpGdW5jdGlvbiBEZWxldGVLZXkoaERlZktleSxzU3ViS2V5TmFtZSkJDQoJU2V0IElucGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuTWV0aG9kc18oIkRlbGV0ZUtleSIpLklucGFyYW1ldGVycw0KCQ0KCUlucGFyYW1zLmhEZWZLZXkgPSBoRGVmS2V5DQoJDQoJSW5wYXJhbXMuc1N1YktleU5hbWUgPSBzU3ViS2V5TmFtZQ0KCQkNCglzZXQgT3V0cGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuRXhlY01ldGhvZF8oIkRlbGV0ZUtleSIsIElucGFyYW1zLCxwcml2YXRlX29DdHgpDQoJDQoNCglEZWxldGVLZXkgPSAwDQoJDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gRGVsZXRlVmFsdWUoaERlZktleSxzU3ViS2V5TmFtZSxzVmFsdWVOYW1lKQkNCglTZXQgSW5wYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5NZXRob2RzXygiRGVsZXRlVmFsdWUiKS5JbnBhcmFtZXRlcnMNCgkNCglJbnBhcmFtcy5oRGVmS2V5ID0gaERlZktleQ0KCQ0KCUlucGFyYW1zLnNTdWJLZXlOYW1lID0gc1N1YktleU5hbWUNCgkNCglJbnBhcmFtcy5zVmFsdWVOYW1lID0gc1ZhbHVlTmFtZQ0KCQkNCglzZXQgT3V0cGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuRXhlY01ldGhvZF8oIkRlbGV0ZVZhbHVlIiwgSW5wYXJhbXMsLHByaXZhdGVfb0N0eCkNCgkNCg0KCURlbGV0ZVZhbHVlID0gMA0KCQ0KRW5kIEZ1bmN0aW9uDQoNCkZ1bmN0aW9uIEVudW1LZXkoaERlZktleSxzU3ViS2V5TmFtZSwgc05hbWVzICkJDQoJU2V0IElucGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuTWV0aG9kc18oIkVudW1LZXkiKS5JbnBhcmFtZXRlcnMNCgkNCglJbnBhcmFtcy5oRGVmS2V5ID0gaERlZktleQ0KCQ0KCUlucGFyYW1zLnNTdWJLZXlOYW1lID0gc1N1YktleU5hbWUNCgkJDQoJc2V0IE91dHBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLkV4ZWNNZXRob2RfKCJFbnVtS2V5IiwgSW5wYXJhbXMsLHByaXZhdGVfb0N0eCkNCgkNCglzTmFtZXMgPSBPdXRwYXJhbXMuc05hbWVzDQoJDQoNCglFbnVtS2V5ID0gMA0KCQ0KRW5kIEZ1bmN0aW9uDQoNCkZ1bmN0aW9uIEVudW1WYWx1ZXMoaERlZktleSxzU3ViS2V5TmFtZSwgc05hbWVzLFR5cGVzICkJDQoJU2V0IElucGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuTWV0aG9kc18oIkVudW1WYWx1ZXMiKS5JbnBhcmFtZXRlcnMNCgkNCglJbnBhcmFtcy5oRGVmS2V5ID0gaERlZktleQ0KCQ0KCUlucGFyYW1zLnNTdWJLZXlOYW1lID0gc1N1YktleU5hbWUNCgkJDQoJc2V0IE91dHBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLkV4ZWNNZXRob2RfKCJFbnVtVmFsdWVzIiwgSW5wYXJhbXMsLHByaXZhdGVfb0N0eCkNCgkNCglzTmFtZXMgPSBPdXRwYXJhbXMuc05hbWVzDQoJDQoJVHlwZXMgPSBPdXRwYXJhbXMuVHlwZXMNCgkNCg0KCUVudW1WYWx1ZXMgPSAwDQoJDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gR2V0QmluYXJ5VmFsdWUoaERlZktleSxzU3ViS2V5TmFtZSxzVmFsdWVOYW1lLCB1VmFsdWUgKQkNCglTZXQgSW5wYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5NZXRob2RzXygiR2V0QmluYXJ5VmFsdWUiKS5JbnBhcmFtZXRlcnMNCgkNCglJbnBhcmFtcy5oRGVmS2V5ID0gaERlZktleQ0KCQ0KCUlucGFyYW1zLnNTdWJLZXlOYW1lID0gc1N1YktleU5hbWUNCgkNCglJbnBhcmFtcy5zVmFsdWVOYW1lID0gc1ZhbHVlTmFtZQ0KCQkNCglzZXQgT3V0cGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuRXhlY01ldGhvZF8oIkdldEJpbmFyeVZhbHVlIiwgSW5wYXJhbXMsLHByaXZhdGVfb0N0eCkNCgkNCgl1VmFsdWUgPSBPdXRwYXJhbXMudVZhbHVlDQoJDQoNCglHZXRCaW5hcnlWYWx1ZSA9IDANCgkNCkVuZCBGdW5jdGlvbg0KDQpGdW5jdGlvbiBHZXREV09SRFZhbHVlKGhEZWZLZXksc1N1YktleU5hbWUsc1ZhbHVlTmFtZSwgdVZhbHVlICkJDQoJU2V0IElucGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuTWV0aG9kc18oIkdldERXT1JEVmFsdWUiKS5JbnBhcmFtZXRlcnMNCgkNCglJbnBhcmFtcy5oRGVmS2V5ID0gaERlZktleQ0KCQ0KCUlucGFyYW1zLnNTdWJLZXlOYW1lID0gc1N1YktleU5hbWUNCgkNCglJbnBhcmFtcy5zVmFsdWVOYW1lID0gc1ZhbHVlTmFtZQ0KCQkNCglzZXQgT3V0cGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuRXhlY01ldGhvZF8oIkdldERXT1JEVmFsdWUiLCBJbnBhcmFtcywscHJpdmF0ZV9vQ3R4KQ0KCQ0KCXVWYWx1ZSA9IE91dHBhcmFtcy51VmFsdWUNCgkNCg0KCUdldERXT1JEVmFsdWUgPSAwDQoJDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gR2V0RXhwYW5kZWRTdHJpbmdWYWx1ZShoRGVmS2V5LHNTdWJLZXlOYW1lLHNWYWx1ZU5hbWUsIHNWYWx1ZSApCQ0KCVNldCBJbnBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLk1ldGhvZHNfKCJHZXRFeHBhbmRlZFN0cmluZ1ZhbHVlIikuSW5wYXJhbWV0ZXJzDQoJDQoJSW5wYXJhbXMuaERlZktleSA9IGhEZWZLZXkNCgkNCglJbnBhcmFtcy5zU3ViS2V5TmFtZSA9IHNTdWJLZXlOYW1lDQoJDQoJSW5wYXJhbXMuc1ZhbHVlTmFtZSA9IHNWYWx1ZU5hbWUNCgkJDQoJc2V0IE91dHBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLkV4ZWNNZXRob2RfKCJHZXRFeHBhbmRlZFN0cmluZ1ZhbHVlIiwgSW5wYXJhbXMsLHByaXZhdGVfb0N0eCkNCgkNCglzVmFsdWUgPSBPdXRwYXJhbXMuc1ZhbHVlDQoJDQoNCglHZXRFeHBhbmRlZFN0cmluZ1ZhbHVlID0gMA0KCQ0KRW5kIEZ1bmN0aW9uDQoNCkZ1bmN0aW9uIEdldE11bHRpU3RyaW5nVmFsdWUoaERlZktleSxzU3ViS2V5TmFtZSxzVmFsdWVOYW1lLCBzVmFsdWUgKQkNCglTZXQgSW5wYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5NZXRob2RzXygiR2V0TXVsdGlTdHJpbmdWYWx1ZSIpLklucGFyYW1ldGVycw0KCQ0KCUlucGFyYW1zLmhEZWZLZXkgPSBoRGVmS2V5DQoJDQoJSW5wYXJhbXMuc1N1YktleU5hbWUgPSBzU3ViS2V5TmFtZQ0KCQ0KCUlucGFyYW1zLnNWYWx1ZU5hbWUgPSBzVmFsdWVOYW1lDQoJCQ0KCXNldCBPdXRwYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5FeGVjTWV0aG9kXygiR2V0TXVsdGlTdHJpbmdWYWx1ZSIsIElucGFyYW1zLCxwcml2YXRlX29DdHgpDQoJDQoJc1ZhbHVlID0gT3V0cGFyYW1zLnNWYWx1ZQ0KCQ0KDQoJR2V0TXVsdGlTdHJpbmdWYWx1ZSA9IDANCgkNCkVuZCBGdW5jdGlvbg0KDQpGdW5jdGlvbiBHZXRRV09SRFZhbHVlKGhEZWZLZXksc1N1YktleU5hbWUsc1ZhbHVlTmFtZSwgdVZhbHVlICkJDQoJU2V0IElucGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuTWV0aG9kc18oIkdldFFXT1JEVmFsdWUiKS5JbnBhcmFtZXRlcnMNCgkNCglJbnBhcmFtcy5oRGVmS2V5ID0gaERlZktleQ0KCQ0KCUlucGFyYW1zLnNTdWJLZXlOYW1lID0gc1N1YktleU5hbWUNCgkNCglJbnBhcmFtcy5zVmFsdWVOYW1lID0gc1ZhbHVlTmFtZQ0KCQkNCglzZXQgT3V0cGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuRXhlY01ldGhvZF8oIkdldFFXT1JEVmFsdWUiLCBJbnBhcmFtcywscHJpdmF0ZV9vQ3R4KQ0KCQ0KCXVWYWx1ZSA9IE91dHBhcmFtcy51VmFsdWUNCgkNCg0KCUdldFFXT1JEVmFsdWUgPSAwDQoJDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gR2V0U2VjdXJpdHlEZXNjcmlwdG9yKGhEZWZLZXksc1N1YktleU5hbWUsIERlc2NyaXB0b3IgKQkNCglTZXQgSW5wYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5NZXRob2RzXygiR2V0U2VjdXJpdHlEZXNjcmlwdG9yIikuSW5wYXJhbWV0ZXJzDQoJDQoJSW5wYXJhbXMuaERlZktleSA9IGhEZWZLZXkNCgkNCglJbnBhcmFtcy5zU3ViS2V5TmFtZSA9IHNTdWJLZXlOYW1lDQoJCQ0KCXNldCBPdXRwYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5FeGVjTWV0aG9kXygiR2V0U2VjdXJpdHlEZXNjcmlwdG9yIiwgSW5wYXJhbXMsLHByaXZhdGVfb0N0eCkNCgkNCglEZXNjcmlwdG9yID0gT3V0cGFyYW1zLkRlc2NyaXB0b3INCgkNCg0KCUdldFNlY3VyaXR5RGVzY3JpcHRvciA9IDANCgkNCkVuZCBGdW5jdGlvbg0KDQpGdW5jdGlvbiBHZXRTdHJpbmdWYWx1ZShoRGVmS2V5LHNTdWJLZXlOYW1lLHNWYWx1ZU5hbWUsIHNWYWx1ZSApCQ0KCVNldCBJbnBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLk1ldGhvZHNfKCJHZXRTdHJpbmdWYWx1ZSIpLklucGFyYW1ldGVycw0KCQ0KCUlucGFyYW1zLmhEZWZLZXkgPSBoRGVmS2V5DQoJDQoJSW5wYXJhbXMuc1N1YktleU5hbWUgPSBzU3ViS2V5TmFtZQ0KCQ0KCUlucGFyYW1zLnNWYWx1ZU5hbWUgPSBzVmFsdWVOYW1lDQoJCQ0KCXNldCBPdXRwYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5FeGVjTWV0aG9kXygiR2V0U3RyaW5nVmFsdWUiLCBJbnBhcmFtcywscHJpdmF0ZV9vQ3R4KQ0KCQ0KCXNWYWx1ZSA9IE91dHBhcmFtcy5zVmFsdWUNCgkNCg0KCUdldFN0cmluZ1ZhbHVlID0gMA0KCQ0KRW5kIEZ1bmN0aW9uDQoNCkZ1bmN0aW9uIFNldEJpbmFyeVZhbHVlKGhEZWZLZXksc1N1YktleU5hbWUsc1ZhbHVlTmFtZSx1VmFsdWUpCQ0KCVNldCBJbnBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLk1ldGhvZHNfKCJTZXRCaW5hcnlWYWx1ZSIpLklucGFyYW1ldGVycw0KCQ0KCUlucGFyYW1zLmhEZWZLZXkgPSBoRGVmS2V5DQoJDQoJSW5wYXJhbXMuc1N1YktleU5hbWUgPSBzU3ViS2V5TmFtZQ0KCQ0KCUlucGFyYW1zLnNWYWx1ZU5hbWUgPSBzVmFsdWVOYW1lDQoJDQoJSW5wYXJhbXMudVZhbHVlID0gdVZhbHVlDQoJCQ0KCXNldCBPdXRwYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5FeGVjTWV0aG9kXygiU2V0QmluYXJ5VmFsdWUiLCBJbnBhcmFtcywscHJpdmF0ZV9vQ3R4KQ0KCQ0KDQoJU2V0QmluYXJ5VmFsdWUgPSAwDQoJDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gU2V0RFdPUkRWYWx1ZShoRGVmS2V5LHNTdWJLZXlOYW1lLHNWYWx1ZU5hbWUsdVZhbHVlKQkNCglTZXQgSW5wYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5NZXRob2RzXygiU2V0RFdPUkRWYWx1ZSIpLklucGFyYW1ldGVycw0KCQ0KCUlucGFyYW1zLmhEZWZLZXkgPSBoRGVmS2V5DQoJDQoJSW5wYXJhbXMuc1N1YktleU5hbWUgPSBzU3ViS2V5TmFtZQ0KCQ0KCUlucGFyYW1zLnNWYWx1ZU5hbWUgPSBzVmFsdWVOYW1lDQoJDQoJSW5wYXJhbXMudVZhbHVlID0gdVZhbHVlDQoJCQ0KCXNldCBPdXRwYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5FeGVjTWV0aG9kXygiU2V0RFdPUkRWYWx1ZSIsIElucGFyYW1zLCxwcml2YXRlX29DdHgpDQoJDQoNCglTZXREV09SRFZhbHVlID0gMA0KCQ0KRW5kIEZ1bmN0aW9uDQoNCkZ1bmN0aW9uIFNldEV4cGFuZGVkU3RyaW5nVmFsdWUoaERlZktleSxzU3ViS2V5TmFtZSxzVmFsdWVOYW1lLHNWYWx1ZSkJDQoJU2V0IElucGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuTWV0aG9kc18oIlNldEV4cGFuZGVkU3RyaW5nVmFsdWUiKS5JbnBhcmFtZXRlcnMNCgkNCglJbnBhcmFtcy5oRGVmS2V5ID0gaERlZktleQ0KCQ0KCUlucGFyYW1zLnNTdWJLZXlOYW1lID0gc1N1YktleU5hbWUNCgkNCglJbnBhcmFtcy5zVmFsdWVOYW1lID0gc1ZhbHVlTmFtZQ0KCQ0KCUlucGFyYW1zLnNWYWx1ZSA9IHNWYWx1ZQ0KCQkNCglzZXQgT3V0cGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuRXhlY01ldGhvZF8oIlNldEV4cGFuZGVkU3RyaW5nVmFsdWUiLCBJbnBhcmFtcywscHJpdmF0ZV9vQ3R4KQ0KCQ0KDQoJU2V0RXhwYW5kZWRTdHJpbmdWYWx1ZSA9IDANCgkNCkVuZCBGdW5jdGlvbg0KDQpGdW5jdGlvbiBTZXRNdWx0aVN0cmluZ1ZhbHVlKGhEZWZLZXksc1N1YktleU5hbWUsc1ZhbHVlTmFtZSxzVmFsdWUpCQ0KCVNldCBJbnBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLk1ldGhvZHNfKCJTZXRNdWx0aVN0cmluZ1ZhbHVlIikuSW5wYXJhbWV0ZXJzDQoJDQoJSW5wYXJhbXMuaERlZktleSA9IGhEZWZLZXkNCgkNCglJbnBhcmFtcy5zU3ViS2V5TmFtZSA9IHNTdWJLZXlOYW1lDQoJDQoJSW5wYXJhbXMuc1ZhbHVlTmFtZSA9IHNWYWx1ZU5hbWUNCgkNCglJbnBhcmFtcy5zVmFsdWUgPSBzVmFsdWUNCgkJDQoJc2V0IE91dHBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLkV4ZWNNZXRob2RfKCJTZXRNdWx0aVN0cmluZ1ZhbHVlIiwgSW5wYXJhbXMsLHByaXZhdGVfb0N0eCkNCgkNCg0KCVNldE11bHRpU3RyaW5nVmFsdWUgPSAwDQoJDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gU2V0UVdPUkRWYWx1ZShoRGVmS2V5LHNTdWJLZXlOYW1lLHNWYWx1ZU5hbWUsdVZhbHVlKQkNCglTZXQgSW5wYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5NZXRob2RzXygiU2V0UVdPUkRWYWx1ZSIpLklucGFyYW1ldGVycw0KCQ0KCUlucGFyYW1zLmhEZWZLZXkgPSBoRGVmS2V5DQoJDQoJSW5wYXJhbXMuc1N1YktleU5hbWUgPSBzU3ViS2V5TmFtZQ0KCQ0KCUlucGFyYW1zLnNWYWx1ZU5hbWUgPSBzVmFsdWVOYW1lDQoJDQoJSW5wYXJhbXMudVZhbHVlID0gdVZhbHVlDQoJCQ0KCXNldCBPdXRwYXJhbXMgPSBwcml2YXRlX29SZWdTcGVjaWZpYy5FeGVjTWV0aG9kXygiU2V0UVdPUkRWYWx1ZSIsIElucGFyYW1zLCxwcml2YXRlX29DdHgpDQoJDQoNCglTZXRRV09SRFZhbHVlID0gMA0KCQ0KRW5kIEZ1bmN0aW9uDQoNCkZ1bmN0aW9uIFNldFNlY3VyaXR5RGVzY3JpcHRvcihoRGVmS2V5LHNTdWJLZXlOYW1lLERlc2NyaXB0b3IpCQ0KCVNldCBJbnBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLk1ldGhvZHNfKCJTZXRTZWN1cml0eURlc2NyaXB0b3IiKS5JbnBhcmFtZXRlcnMNCgkNCglJbnBhcmFtcy5oRGVmS2V5ID0gaERlZktleQ0KCQ0KCUlucGFyYW1zLnNTdWJLZXlOYW1lID0gc1N1YktleU5hbWUNCgkNCglJbnBhcmFtcy5EZXNjcmlwdG9yID0gRGVzY3JpcHRvcg0KCQkNCglzZXQgT3V0cGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuRXhlY01ldGhvZF8oIlNldFNlY3VyaXR5RGVzY3JpcHRvciIsIElucGFyYW1zLCxwcml2YXRlX29DdHgpDQoJDQoNCglTZXRTZWN1cml0eURlc2NyaXB0b3IgPSAwDQoJDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gU2V0U3RyaW5nVmFsdWUoaERlZktleSxzU3ViS2V5TmFtZSxzVmFsdWVOYW1lLHNWYWx1ZSkJDQoJU2V0IElucGFyYW1zID0gcHJpdmF0ZV9vUmVnU3BlY2lmaWMuTWV0aG9kc18oIlNldFN0cmluZ1ZhbHVlIikuSW5wYXJhbWV0ZXJzDQoJDQoJSW5wYXJhbXMuaERlZktleSA9IGhEZWZLZXkNCgkNCglJbnBhcmFtcy5zU3ViS2V5TmFtZSA9IHNTdWJLZXlOYW1lDQoJDQoJSW5wYXJhbXMuc1ZhbHVlTmFtZSA9IHNWYWx1ZU5hbWUNCgkNCglJbnBhcmFtcy5zVmFsdWUgPSBzVmFsdWUNCgkJDQoJc2V0IE91dHBhcmFtcyA9IHByaXZhdGVfb1JlZ1NwZWNpZmljLkV4ZWNNZXRob2RfKCJTZXRTdHJpbmdWYWx1ZSIsIElucGFyYW1zLCxwcml2YXRlX29DdHgpDQoJDQoNCglTZXRTdHJpbmdWYWx1ZSA9IDANCgkNCkVuZCBGdW5jdGlvbg0K\",\"JsonSafeTest.wsf\":\"PGpvYiBpZD0iSnNvblNhZmVTdHJlYW1UZXN0Ij4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCIgc3JjPSJ1dGlsLnZicyIgLz4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCI+CQkNCgkJc3RyID0gIiIiIiAmIHZiY3JsZiAmICLmtYvor5VcIg0KCQlXcml0ZSgieyAiImEiIjogIiIiICYgSnNvblNhZmUoc3RyKSAmICIiIn0iICYgdmJjcmxmKQ0KCTwvc2NyaXB0Pg0KPC9qb2I+DQo=\",\"regCreateKey.wsf\":\"PGpvYiBpZD0iY3JlYXRlS2V5U3RyZWFtIj4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCIgc3JjPSJ1dGlsLnZicyIgLz4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCIgc3JjPSJyZWdVdGlsLnZicyIgLz4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCI+DQoNCgkJQ2hlY2taZXJvQXJncygidXNhZ2U6IGNzY3JpcHQgcmVnQ3JlYXRlS2V5LndzZiBhcmNoaXRlY3R1cmUiKQ0KCQlEZXRlcm1pbmVPU0FyY2hpdGVjdHVyZSgpDQoJCUxvYWRSZWdpc3RyeUltcGxlbWVudGF0aW9uQnlPU0FyY2hpdGVjdHVyZSgpDQoNCgkJRG8gV2hpbGUgTm90IHN0ZGluLkF0RW5kT2ZMaW5lDQoJCQlzdHJMaW5lID0gc3RkaW4uUmVhZExpbmUoKQkJCQ0KCQkJc3RyTGluZSA9IHVuZXNjYXBlKHRyaW0oc3RyTGluZSkpDQoNCgkJCUlmIElzTnVsbChzdHJMaW5lKSBvciBzdHJMaW5lID0gIiIgVGhlbg0KCQkJCVdTY3JpcHQuUXVpdCAyNTEyNw0KCQkJRW5kIElmDQoJCQkNCgkJCVBhcnNlSGl2ZUFuZFN1YktleSBzdHJMaW5lLCBjb25zdEhpdmUsIHN0clN1YktleQ0KDQoJCQlpZiBJc051bGwoY29uc3RIaXZlKSBUaGVuDQoJCQkJV3JpdGVMaW5lRXJyICJ1bnN1cHBvcnRlZCBoaXZlICIgJiBzdHJMaW5lDQoJCQkJV1NjcmlwdC5RdWl0IDI1MTIyDQoJCQlFbmQgSWYNCg0KCQkJUmVzdWx0ID0gQ3JlYXRlS2V5KGNvbnN0SGl2ZSwgc3RyU3ViS2V5KQ0KDQoJCQlJZiBOb3QgUmVzdWx0ID0gMCBUaGVuCQkJCQ0KCQkJCVdTY3JpcHQuUXVpdCBSZXN1bHQNCgkJCUVuZCBJZg0KCQlMb29wDQoJPC9zY3JpcHQ+DQo8L2pvYj4=\",\"regDeleteKey.wsf\":\"PGpvYiBpZD0iZGVsZXRlS2V5Ij4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCIgc3JjPSJ1dGlsLnZicyIgLz4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCIgc3JjPSJyZWdVdGlsLnZicyIgLz4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCI+DQoNCgkJQ2hlY2taZXJvQXJncygidXNhZ2U6IGNzY3JpcHQgcmVnRGVsZXRlS2V5LndzZiBhcmNoaXRlY3R1cmUiKQ0KCQlEZXRlcm1pbmVPU0FyY2hpdGVjdHVyZSgpDQoJCUxvYWRSZWdpc3RyeUltcGxlbWVudGF0aW9uQnlPU0FyY2hpdGVjdHVyZSgpDQoNCgkJRG8gV2hpbGUgTm90IHN0ZGluLkF0RW5kT2ZMaW5lDQoJCQkNCgkJCXN0ckxpbmUgPSBzdGRpbi5SZWFkTGluZSgpDQoJCQlzdHJMaW5lID0gdW5lc2NhcGUodHJpbShzdHJMaW5lKSkNCgkJDQoJCQlQYXJzZUhpdmVBbmRTdWJLZXkgc3RyTGluZSwgY29uc3RIaXZlLCBzdHJTdWJLZXkNCg0KCQkJaWYgSXNOdWxsKGNvbnN0SGl2ZSkgVGhlbg0KCQkJCVdyaXRlTGluZUVyciAidW5zdXBwb3J0ZWQgaGl2ZSAiICYgc3RyTGluZQ0KCQkJCVdTY3JpcHQuUXVpdCAyNTEyMiAgIA0KCQkJRW5kIElmDQoNCgkJCVJlc3VsdCA9IERlbGV0ZUtleShjb25zdEhpdmUsIHN0clN1YktleSkNCg0KCQkJSWYgTm90IFJlc3VsdCA9IDAgVGhlbgkJCQkNCgkJCQlXU2NyaXB0LlF1aXQgUmVzdWx0DQoJCQlFbmQgSWYNCgkJTG9vcA0KCTwvc2NyaXB0Pg0KPC9qb2I+\",\"regDeleteValue.wsf\":\"PGpvYiBpZD0iZGVsZXRlVmFsdWUiPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0IiBzcmM9InV0aWwudmJzIiAvPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0IiBzcmM9InJlZ1V0aWwudmJzIiAvPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0Ij4NCg0KCQlDaGVja1plcm9BcmdzKCJ1c2FnZTogY3NjcmlwdCByZWdEZWxldGVWYWx1ZS53c2YgYXJjaGl0ZWN0dXJlIikNCgkJRGV0ZXJtaW5lT1NBcmNoaXRlY3R1cmUoKQ0KCQlMb2FkUmVnaXN0cnlJbXBsZW1lbnRhdGlvbkJ5T1NBcmNoaXRlY3R1cmUoKQ0KDQoJCURvIFdoaWxlIE5vdCBzdGRpbi5BdEVuZE9mTGluZQ0KDQoJCQlzdHJMaW5lID0gc3RkaW4uUmVhZExpbmUoKQ0KCQkJc3RyTGluZSA9IHVuZXNjYXBlKHRyaW0oc3RyTGluZSkpDQoNCgkJCVBhcnNlSGl2ZUFuZFN1YktleUFuZFZhbHVlIHN0ckxpbmUsIGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZQ0KDQoJCQlpZiBJc051bGwoY29uc3RIaXZlKSBUaGVuDQoJCQkJV3JpdGVMaW5lRXJyICJ1bnN1cHBvcnRlZCBoaXZlICIgJiBzdHJMaW5lDQoJCQkJV1NjcmlwdC5RdWl0IDI1MTIyDQoJCQlFbmQgSWYNCg0KCQkJUmVzdWx0ID0gRGVsZXRlVmFsdWUoY29uc3RIaXZlLCBzdHJTdWJLZXksIHN0clZhbHVlKQ0KDQoJCQlJZiBOb3QgUmVzdWx0ID0gMCBUaGVuDQoJCQkJV1NjcmlwdC5RdWl0IFJlc3VsdA0KCQkJRW5kIElmDQoJCUxvb3ANCgk8L3NjcmlwdD4NCjwvam9iPg0K\",\"regList.wsf\":\"JyANCicJTGlzdHMgdGhlIHN1YiBrZXlzIGFuZCB2YWx1ZXMgb2YgYSBnaXZlbiByZWdpc3RyeSBrZXkNCicNCicJY3NjcmlwdCByZWdMaXN0LndzZyBIS0xNXFNvZnR3YXJlDQonDQonCVdpbGwgWWllbGQ6DQonDQonCXsNCicJCSJoa2xtXHNvZnR3YXJlIjogeyANCicJCQkia2V5cyI6IFsgLi4gYXJyYXkgb2Ygc3ViIGtleXMgLi4gXSwgDQonCQkJInZhbHVlcyI6IHsgDQonCQkJCSJtb28iOiB7IA0KJwkJCQkJInR5cGUiOiAiUkVHX1NaIiwgDQonCQkJCQkidmFsdWUiOiAiYmFyIg0KJwkJCQl9DQonCQkJfQ0KJwkJfQ0KJwl9DQo8am9iIGlkPSJsaXN0Ij4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCIgc3JjPSJ1dGlsLnZicyIgLz4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCIgc3JjPSJyZWdVdGlsLnZicyIgLz4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCI+CQkNCgkJQ2hlY2taZXJvQXJncygidXNhZ2U6IGNzY3JpcHQgcmVnTGlzdC53c2YgYXJjaGl0ZWN0dXJlIHJlZ3BhdGgxIFtyZWdwYXRoMl0gLi4uIFtyZWdwYXRoTl0iKQ0KCQlEZXRlcm1pbmVPU0FyY2hpdGVjdHVyZSgpDQoJCUxvYWRSZWdpc3RyeUltcGxlbWVudGF0aW9uQnlPU0FyY2hpdGVjdHVyZSgpDQoJDQoJCVdyaXRlICJ7Ig0KCQlPbiBFcnJvciBSZXN1bWUgTmV4dA0KCQlGb3IgdiA9IDEgVG8gYXJncy5Db3VudCAtIDENCgkJCUlmICh2ID4gMSkgVGhlbg0KCQkJCVdyaXRlICIsIg0KCQkJRW5kIElmDQoJCQkNCgkJCURpbSBrZXk6IGtleSA9IHRyaW0oYXJncyh2KSkNCg0KCQkJV3JpdGUgIiIiIiAmIEpzb25TYWZlKGtleSkgJiAiIiI6ICINCgkJCQ0KCQkJUGFyc2VIaXZlQW5kU3ViS2V5IGtleSwgY29uc3RIaXZlLCBzdHJTdWJLZXkNCgkJCQ0KCQkJSWYgSXNOdWxsKGNvbnN0SGl2ZSkgVGhlbg0KCQkJCVdyaXRlTGluZUVyciAidW5zdXBwb3J0ZWQgaGl2ZSAiICYgYXJncyh2KQ0KCQkJCVdTY3JpcHQuUXVpdCAyNTEyMiAgICAgICANCgkJCUVuZCBJZg0KDQoJCQlMaXN0Q2hpbGRyZW5Bc0pzb24gY29uc3RIaXZlLCBzdHJTdWJLZXkNCgkJTmV4dA0KCQlXcml0ZSAifSINCgk8L3NjcmlwdD4NCjwvam9iPg==\",\"regListStream.wsf\":\"JyANCicJTGlzdHMgdGhlIHN1YiBrZXlzIGFuZCB2YWx1ZXMgb2YgYSBnaXZlbiByZWdpc3RyeSBrZXksIHRoaXMgc2NyaXB0IGlzIHNsaWdodGx5IGRpZmZlcmVudA0KJwl0aGFuIHJlZ0xpc3QgYmVjYXVzZSBpdCByZWFkcyBzdGRpbiBmb3IgdGhlIGtleXMgdG8gbGlzdA0KJw0KJwllY2hvIEhLTE1cU29mdHdhcmUgfCBjc2NyaXB0IHJlZ0xpc3RTdHJlYW0ud3NmIEENCicNCicJV2lsbCBZaWVsZDoNCicNCicJew0KJwkJImhrbG1cc29mdHdhcmUiOiB7IA0KJwkJCSJrZXlzIjogWyAuLiBhcnJheSBvZiBzdWIga2V5cyAuLiBdLCANCicJCQkidmFsdWVzIjogeyANCicJCQkJIm1vbyI6IHsgDQonCQkJCQkidHlwZSI6ICJSRUdfU1oiLCANCicJCQkJCSJ2YWx1ZSI6ICJiYXIiDQonCQkJCX0NCicJCQl9DQonCQl9DQonCX0NCjxqb2IgaWQ9Imxpc3RTdHJlYW0iPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0IiBzcmM9InV0aWwudmJzIiAvPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0IiBzcmM9InJlZ1V0aWwudmJzIiAvPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0Ij4JCQ0KCQlDaGVja1plcm9BcmdzKCJ1c2FnZTogZWNobyBLRVkgfCBjc2NyaXB0IHJlZ0xpc3RTdHJlYW0ud3NmIGFyY2hpdGVjdHVyZSIpDQoJCURldGVybWluZU9TQXJjaGl0ZWN0dXJlKCkNCgkJTG9hZFJlZ2lzdHJ5SW1wbGVtZW50YXRpb25CeU9TQXJjaGl0ZWN0dXJlKCkNCgkJDQoJCURvIFdoaWxlIE5vdCBzdGRpbi5BdEVuZE9mTGluZQ0KDQoJCQlzdHJMaW5lID0gc3RkaW4uUmVhZExpbmUoKQ0KCQkJc3RyTGluZSA9IHVuZXNjYXBlKHRyaW0oc3RyTGluZSkpDQoJCQ0KCQkJUGFyc2VIaXZlQW5kU3ViS2V5IHN0ckxpbmUsIGNvbnN0SGl2ZSwgc3RyU3ViS2V5DQoNCgkJCWlmIElzTnVsbChjb25zdEhpdmUpIFRoZW4NCgkJCQlXcml0ZUxpbmVFcnIgInVuc3VwcG9ydGVkIGhpdmUgIiAmIHN0ckxpbmUNCgkJCQlXU2NyaXB0LlF1aXQgMjUxMjIgICAgICAgDQoJCQlFbmQgSWYNCg0KCQkJV3JpdGUgInsgIiJrZXkiIiA6ICIiIiAmIEpzb25TYWZlKHN0ckxpbmUpICYgIiIiLCAiImRhdGEiIjogIg0KCQkJTGlzdENoaWxkcmVuQXNKc29uIGNvbnN0SGl2ZSwgc3RyU3ViS2V5DQoJCQlXcml0ZSAifSIgJiB2YmNybGYNCgkJTG9vcA0KDQoJPC9zY3JpcHQ+DQo8L2pvYj4=\",\"regPutValue.wsf\":\"PGpvYiBpZD0icHV0VmFsdWUiPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0IiBzcmM9InV0aWwudmJzIiAvPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0IiBzcmM9InJlZ1V0aWwudmJzIiAvPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0Ij4NCgkJdXNhZ2UgPSAidXNhZ2U6IGNzY3JpcHQgcmVnUHV0VmFsdWUud3NmIGFyY2hpdGVjdHVyZSIgJiB2Yk5ld0xpbmUgXw0KCQkJCQkmICJ0eXBlczogUkVHX1NaLCBSRUdfRVhQQU5EX1NaLCBSRUdfQklOQVJZLCBSRUdfRFdPUkQsIFJFR19NVUxUSV9TWiwgUkVHX1FXT1JEIg0KDQoJCUNoZWNrWmVyb0FyZ3ModXNhZ2UpDQoJCURldGVybWluZU9TQXJjaGl0ZWN0dXJlKCkNCgkJTG9hZFJlZ2lzdHJ5SW1wbGVtZW50YXRpb25CeU9TQXJjaGl0ZWN0dXJlKCkNCg0KCQlSZWFkQ291bnQgPSAwDQoJCURpbSBsaW5lQXJncygzKQ0KDQoJCURvIFdoaWxlIE5vdCBzdGRpbi5BdEVuZE9mTGluZQ0KCQkJc3RyTGluZSA9IHN0ZGluLlJlYWRMaW5lKCkNCgkJCXN0ckxpbmUgPSB1bmVzY2FwZSh0cmltKHN0ckxpbmUpKQ0KDQoJCQlJZiBJc051bGwoc3RyTGluZSkgb3Igc3RyTGluZSA9ICIiIFRoZW4NCgkJCQlXU2NyaXB0LlF1aXQgMjUxMjcNCgkJCUVuZCBJZg0KDQoJCQlsaW5lQXJncyhSZWFkQ291bnQpID0gc3RyTGluZQ0KCQkJDQoJCQlSZWFkQ291bnQgPSBSZWFkQ291bnQgKyAxDQoNCgkJCUlmIFJlYWRDb3VudCA9IDQgVGhlbg0KDQoJCQkJUGFyc2VIaXZlQW5kU3ViS2V5IGxpbmVBcmdzKDApLCBjb25zdEhpdmUsIHN0clN1YktleQ0KCQkJCQ0KCQkJCWlmIElzTnVsbChjb25zdEhpdmUpIFRoZW4NCgkJCQkJV3JpdGVMaW5lRXJyICJ1bnN1cHBvcnRlZCBoaXZlICIgJiBsaW5lQXJncygwKQ0KCQkJCQlXU2NyaXB0LlF1aXQgMjUxMjINCgkJCQlFbmQgSWYNCg0KCQkJCXN0clZhbHVlTmFtZSA9IGxpbmVBcmdzKDEpDQoJCQkJc3RyVmFsdWUgPSBsaW5lQXJncygyKQ0KCQkJCXN0clR5cGUgPSBsaW5lQXJncygzKQ0KCQkJCQ0KCQkJCVJlc3VsdCA9IFB1dFZhbHVlKGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZU5hbWUsIHN0clZhbHVlLCBzdHJUeXBlKQ0KDQoJCQkJSWYgTm90IFJlc3VsdCA9IDAgVGhlbg0KCQkJCQlXcml0ZUxpbmVFcnIgImVycm9yIHdoaWxlIHB1dHRpbmcgdmFsdWU6ICIgJiByZXN1bHQNCgkJCQkJV1NjcmlwdC5RdWl0IFJlc3VsdA0KCQkJCUVuZCBJZg0KDQoJCQkJUmVhZENvdW50ID0gMA0KCQkJCUVyYXNlIGxpbmVBcmdzCQkJCQ0KCQkJRW5kIElmDQoJCUxvb3ANCg0KCQlJZiBSZWFkQ291bnQgPD4gMCBUaGVuDQoJCQlXU2NyaXB0LlF1aXQgMjUxMjMNCgkJRW5kIElmDQoJPC9zY3JpcHQ+DQo8L2pvYj4=\",\"regUtil.vbs\":\"JyBUT0RPOiBjb25zaWRlciBpbmNvcnBvcmF0aW5nIGEganNvbiB3cml0ZXIgb2Ygc29tZSBzb3J0IGluc3RlYWQgb2YgYWRob2Mgc29sdXRpb24gbGlrZSB0aGUgZm9sbG93aW5nDQonIGUuZzogaHR0cDovL2RlbW9uLnR3L215LXdvcmsvdmJzLWpzb24uaHRtbA0KDQpjb25zdCBIS0VZX0NMQVNTRVNfUk9PVCA9ICZIODAwMDAwMDANCmNvbnN0IEhLRVlfQ1VSUkVOVF9VU0VSID0gJkg4MDAwMDAwMQ0KY29uc3QgSEtFWV9MT0NBTF9NQUNISU5FID0gJkg4MDAwMDAwMg0KY29uc3QgSEtFWV9VU0VSUyA9ICZIODAwMDAwMDMNCmNvbnN0IEhLRVlfQ1VSUkVOVF9DT05GSUcgPSAmSDgwMDAwMDA1DQoNClN1YiBMb2FkUmVnaXN0cnlJbXBsZW1lbnRhdGlvbkJ5T1NBcmNoaXRlY3R1cmUoKQ0KCUlmIElzTnVsbChPU0FyY2hpdGVjdHVyZSkgVGhlbg0KCQlXcml0ZUxpbmVFcnIgIm1pc3NpbmcgT1NBcmNoaXRlY3R1cmUgZ2xvYmFsLiBkaWQgbm90IGNhbGwgdXRpbC5EZXRlcm1pbmVPU0FyY2hpdGVjdHVyZT8gb3IgRm9yZ290IHRvIGxvYWQgdXRpbC52YnM/Ig0KCQlXU2NyaXB0LlF1aXQgMjUxMjUJCQ0KCUVuZCBJZg0KDQoJSWYgT1NBcmNoaXRlY3R1cmUgPSAiQSIgVGhlbg0KCQlJbmNsdWRlICJBcmNoaXRlY3R1cmVBZ25vc3RpY1JlZ2lzdHJ5LnZicyINCglFbHNlDQoJCUluY2x1ZGUgIkFyY2hpdGVjdHVyZVNwZWNpZmljUmVnaXN0cnkudmJzIg0KCUVuZCBJZg0KRW5kIFN1YiANCg0KRnVuY3Rpb24gUHV0VmFsdWUoY29uc3RIaXZlLCBzdHJTdWJLZXksIHN0clZhbHVlTmFtZSwgc3RyVmFsdWUsIHN0clR5cGUpDQoJU2VsZWN0IENhc2UgVUNhc2Uoc3RyVHlwZSkNCgkJDQoJCUNhc2UgIlJFR19TWiINCgkJCVB1dFZhbHVlID0gU2V0U3RyaW5nVmFsdWUoY29uc3RIaXZlLCBzdHJTdWJLZXksIHN0clZhbHVlTmFtZSwgc3RyVmFsdWUpDQoNCgkJQ2FzZSAiUkVHX0VYUEFORF9TWiINCgkJCVB1dFZhbHVlID0gU2V0RXhwYW5kZWRTdHJpbmdWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBzdHJWYWx1ZSkNCg0KCQlDYXNlICJSRUdfQklOQVJZIg0KCQkJUHV0VmFsdWUgPSBTZXRCaW5hcnlWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBUb0JpbmFyeVZhbHVlKHN0clZhbHVlKSkNCg0KCQlDYXNlICJSRUdfTk9ORSINCgkJCVB1dFZhbHVlID0gU2V0QmluYXJ5VmFsdWUoY29uc3RIaXZlLCBzdHJTdWJLZXksIHN0clZhbHVlTmFtZSwgVG9CaW5hcnlWYWx1ZShzdHJWYWx1ZSkpDQoNCgkJJyBUT0RPOiBuZWVkIHRvIGNoZWNrIHRoYXQgaW5kZWVkIGludCBpcyB0aGUgcmlnaHQgdHlwZSBoZXJlDQoJCUNhc2UgIlJFR19EV09SRCINCgkJCVB1dFZhbHVlID0gU2V0RFdPUkRWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBDRGJsKHN0clZhbHVlKSkNCg0KCQlDYXNlICJSRUdfTVVMVElfU1oiDQoJCQlQdXRWYWx1ZSA9IFNldE11bHRpU3RyaW5nVmFsdWUoY29uc3RIaXZlLCBzdHJTdWJLZXksIHN0clZhbHVlTmFtZSwgU3BsaXQoc3RyVmFsdWUsICIsIikpDQoNCgkJQ2FzZSAiUkVHX1FXT1JEIg0KCQkJUHV0VmFsdWUgPSBTZXRRV09SRFZhbHVlKGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZU5hbWUsIHN0clZhbHVlKQ0KDQoJCUNhc2UgIlJFR19ERUZBVUxUIg0KCQkJUHV0VmFsdWUgPSBTZXRTdHJpbmdWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgIiIsIHN0clZhbHVlKQ0KDQoJCUNhc2UgRWxzZQ0KCQkJUHV0VmFsdWUgPSBTZXRTdHJpbmdWYWx1ZShjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBzdHJWYWx1ZSkNCg0KCUVuZCBTZWxlY3QNCkVuZCBGdW5jdGlvbg0KDQonIHJlbmRlciB0aGUgY2hpbGQgb2YgYSBzdWIgcGF0aCBzdHJTdWJLZXkgaW4gaGl2ZSBjb25zdEhpdmUNCicgYXMganNvbi4NClN1YiBMaXN0Q2hpbGRyZW5Bc0pzb24oY29uc3RIaXZlLCBzdHJTdWJLZXkpDQoJJyBzdGFydCBvdXRwdXR0aW5nIGpzb24gdG8gc3Rkb3V0DQoJV3JpdGUgInsiDQoNCglEaW0gZTE6IGUxID0gRW51bUtleSAoY29uc3RIaXZlLCBzdHJTdWJLZXksIGFycktleU5hbWVzKQ0KCUlmIGUxIDw+IDAgVGhlbg0KCQlXcml0ZSAiIiJleGlzdHMiIjogZmFsc2UsIg0KCQlEaW0gYXJyVmFsdWVOYW1lczogYXJyVmFsdWVOYW1lcyA9IG51bGwNCglFbHNlDQoJCVdyaXRlICIiImV4aXN0cyIiOiB0cnVlLCINCg0KCQlEaW0gZTI6IGUyID0gRW51bVZhbHVlcyAoY29uc3RIaXZlLCBzdHJTdWJLZXksIGFyclZhbHVlTmFtZXMsIGFyclZhbHVlVHlwZXMpDQoJCUlmIGUyIDw+IDAgVGhlbg0KCQkJV1NjcmlwdC5RdWl0IGUyDQoJCUVuZCBJZg0KCUVuZCBJZg0KDQoJV3JpdGUgIiIia2V5cyIiOiBbIg0KCUlmIE5vdCBJc051bGwoYXJyS2V5TmFtZXMpIFRoZW4NCgkJRm9yIHggPSAwIFRvIFVCb3VuZChhcnJLZXlOYW1lcykNCgkJCUlmICh4ID4gMCkgVGhlbg0KCQkJCVdyaXRlICIsIg0KCQkJRW5kIElmDQoJDQoJCQlXcml0ZSAiIiIiICYgSnNvblNhZmUoYXJyS2V5TmFtZXMoeCkpICYgIiIiIg0KCQlOZXh0DQoJRW5kIElmDQoJV3JpdGUgIl0sIg0KCScgVE9ETzogc29tZSBkdXBsaWNpdHkgb2YgY29kZSBiZXR3ZWVuIHRoZSB0d28gcGF0aHMgb2YgdGhpcyBjb25kaXRpb24sIHRoaXMgbmVlZHMgdG8gYmUgYWRkcmVzcyBhdCBzb21lIHBvaW50DQoJV3JpdGUgIiIidmFsdWVzIiI6eyINCglJZiBOb3QgSXNOdWxsKGFyclZhbHVlTmFtZXMpIFRoZW4NCgkJRm9yIHkgPSAwIFRvIFVCb3VuZChhcnJWYWx1ZU5hbWVzKQ0KCQkJSWYgeSA+IDAgVGhlbg0KCQkJCVdyaXRlICIsIg0KCQkJRW5kIElmDQoNCgkJCXN0clZhbHVlTmFtZSA9IGFyclZhbHVlTmFtZXMoeSkNCgkJCWludFZhbHVlVHlwZSA9IGFyclZhbHVlVHlwZXMoeSkNCgkJCQ0KCQkJJyBhc3NpZ24gdGhlIHZhbHVlIHRvIHZhclZhbHVlDQoJCQlHZXRWYWx1ZUJ5VHlwZSBjb25zdEhpdmUsIHN0clN1YktleSwgc3RyVmFsdWVOYW1lLCBpbnRWYWx1ZVR5cGUsIHZhclZhbHVlDQoJCQkNCgkJCVdyaXRlVmFsdWUgc3RyVmFsdWVOYW1lLCBpbnRWYWx1ZVR5cGUsIHZhclZhbHVlDQoJCU5leHQNCglFbHNlDQoJCScgZml4IGZvciBrZXlzIHdpdGggb25seSBkZWZhdWx0IHZhbHVlcyBpbiB0aGVtDQoJCScgc2VlIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvODg0MDM0My9ob3ctdG8tcmVhZC10aGUtZGVmYXVsdC12YWx1ZS1mcm9tLXJlZ2lzdHJ5LWluLXZic2NyaXB0DQoJCUdldFN0cmluZ1ZhbHVlIGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCAiIiwgc3RyRGVmYXVsdFZhbHVlDQoNCgkJSWYgSXNOdWxsKHN0ckRlZmF1bHRWYWx1ZSkgPSBmYWxzZSBhbmQgc3RyRGVmYXVsdFZhbHVlIDw+ICIiIFRoZW4NCgkJCScgd3JpdGUgdGhlIGRlZmF1bHQgdmFsdWUgd2l0aCBSRUdfU1oNCgkJCVdyaXRlVmFsdWUgIiIsIDEsIHN0ckRlZmF1bHRWYWx1ZQ0KCQlFbmQgSWYNCglFbmQgSWYNCglXcml0ZSAifX0iCQ0KRW5kIFN1Yg0KDQpTdWIgV3JpdGVWYWx1ZSAoc3RyVmFsdWVOYW1lLCBpbnRWYWx1ZVR5cGUsIHZhclZhbHVlKQ0KCVdyaXRlICIiIiIgIA0KCVdyaXRlIEpzb25TYWZlKHN0clZhbHVlTmFtZSkNCglXcml0ZSAiIiI6eyINCglXcml0ZSAiIiJ0eXBlIiI6ICIiIg0KCVdyaXRlIFJlbmRlclR5cGUoaW50VmFsdWVUeXBlKQ0KCVdyaXRlICIiIiwiDQoJV3JpdGUgIiIidmFsdWUiIjoiDQoJV3JpdGUgUmVuZGVyVmFsdWVCeVR5cGUoaW50VmFsdWVUeXBlLCB2YXJWYWx1ZSkNCglXcml0ZSAifSINCkVuZCBTdWINCg0KJyBnaXZlIGEgcmF3IEhLTE1cc29tZXRoaW5nXHNvbWV3aGVyZQ0KJyBvdXRwdXQgdGhlIGhpdmUgY29uc3RhbnQgYW5kIHRoZSBzdWJrZXksIGluIHRoaXMgY2FzZToNCicgSEtFWV9MT0NBTF9NQUNISU5FIHdpbGwgYmUgYXNzaWduZWQgdG8gb3V0Q29uc3RIaXZlDQonIGFuZCBzb21ldGhpbmdcc29tZXdoZXJlIHdpbGwgYmUgYXNzaWduZWQgdG8gb3V0U3RyU3ViS2V5DQpTdWIgUGFyc2VIaXZlQW5kU3ViS2V5KHN0clJhd0tleSwgb3V0Q29uc3RIaXZlLCBvdXRTdHJTdWJLZXkpCQ0KCScgc3BsaXQgaW50byB0d28gcGFydHMgdG8gZGVkdWNlIHRoZSBoaXZlIGFuZCB0aGUgc3ViIGtleQ0KCWFyclNwbGl0dGVkID0gU3BsaXQoc3RyUmF3S2V5LCAiXCIsIDIsIDEpDQoJDQoJSWYgVUJvdW5kKGFyclNwbGl0dGVkKSA+IDAgVGhlbg0KCQlzdHJIaXZlID0gYXJyU3BsaXR0ZWQoMCkJDQoJCW91dFN0clN1YktleSA9IGFyclNwbGl0dGVkKDEpDQoJRWxzZQ0KCQlzdHJIaXZlID0gc3RyUmF3S2V5DQoJCW91dFN0clN1YktleSA9ICIiDQoJRW5kIElmDQoNCglvdXRDb25zdEhpdmUgPSBTdHJpbmdUb0hpdmVDb25zdChVQ2FzZShzdHJIaXZlKSkNCkVuZCBTdWINCg0KRnVuY3Rpb24gQXJyYXlSZW1vdmVBdChhcnIsIHBvcykNCglEaW0gaQ0KCUlmIElzQXJyYXkoYXJyKSBUaGVuDQoJCUlmIHBvcyA+PSAwIEFuZCBwb3MgPD0gVUJvdW5kKGFycikgVGhlbg0KCQkJRm9yIGkgPSBwb3MgVG8gVUJvdW5kKGFycikgLSAxDQoJCQkJYXJyKGkpID0gYXJyKGkgKyAxKQ0KCQkJTmV4dA0KCQkJUmVEaW0gUHJlc2VydmUgYXJyKFVCb3VuZChhcnIpIC0gMSkNCgkJRW5kIElmDQoJRW5kIElmDQpFbmQgRnVuY3Rpb24NCg0KU3ViIFBhcnNlSGl2ZUFuZFN1YktleUFuZFZhbHVlKHN0clJhd0tleSwgb3V0Q29uc3RIaXZlLCBvdXRTdHJTdWJLZXksIG91dFN0clZhbHVlKQ0KCScgc3BsaXQgaW50byB0d28gcGFydHMgdG8gZGVkdWNlIHRoZSBoaXZlIGFuZCB0aGUgc3ViIGtleQ0KCWFyclNwbGl0dGVkID0gU3BsaXQoc3RyUmF3S2V5LCAiXCIsIC0xLCAxKQ0KICANCiAgSWYgVUJvdW5kKGFyclNwbGl0dGVkKSA+IDAgVGhlbg0KCQlzdHJIaXZlID0gYXJyU3BsaXR0ZWQoMCkNCgkJb3V0U3RyVmFsdWUgPSBhcnJTcGxpdHRlZChVQm91bmQoYXJyU3BsaXR0ZWQpKQ0KCQl0ZXN0ID0gQXJyYXlSZW1vdmVBdChhcnJTcGxpdHRlZCwgVUJvdW5kKGFyclNwbGl0dGVkKSkNCgkJdGVzdCA9IEFycmF5UmVtb3ZlQXQoYXJyU3BsaXR0ZWQsIDApDQoJCW91dFN0clN1YktleSA9IEpvaW4oYXJyU3BsaXR0ZWQsICJcIikNCglFbHNlDQoJCXN0ckhpdmUgPSBzdHJSYXdLZXkNCgkJb3V0U3RyU3ViS2V5ID0gIiINCglFbmQgSWYNCg0KCW91dENvbnN0SGl2ZSA9IFN0cmluZ1RvSGl2ZUNvbnN0KFVDYXNlKHN0ckhpdmUpKQ0KRW5kIFN1Yg0KDQpGdW5jdGlvbiBTdHJpbmdUb0hpdmVDb25zdChzdHJIaXZlKQ0KCQ0KCVNlbGVjdCBDYXNlIHN0ckhpdmUNCgkJQ2FzZSAiSEtDUiINCgkJCVN0cmluZ1RvSGl2ZUNvbnN0ID0gSEtFWV9DTEFTU0VTX1JPT1QNCgkJQ2FzZSAiSEtDVSINCgkJCVN0cmluZ1RvSGl2ZUNvbnN0ID0gSEtFWV9DVVJSRU5UX1VTRVINCgkJQ2FzZSAiSEtMTSINCgkJCVN0cmluZ1RvSGl2ZUNvbnN0ID0gSEtFWV9MT0NBTF9NQUNISU5FDQoJCUNhc2UgIkhLVSINCgkJCVN0cmluZ1RvSGl2ZUNvbnN0ID0gSEtFWV9VU0VSUw0KCQlDYXNlICJIS0NDIg0KCQkJU3RyaW5nVG9IaXZlQ29uc3QgPSBIS0VZX0NVUlJFTlRfQ09ORklHDQoJCUNhc2UgRWxzZQ0KCQkJU3RyaW5nVG9IaXZlQ29uc3QgPSBOdWxsCQ0KCUVuZCBTZWxlY3QJDQoNCkVuZCBGdW5jdGlvbg0KDQonIFRPRE86IHRoaXMgZW50aXJlICJieSB0eXBlIiBzaG91bGQgYmUgdHJhbnNmb3JtZWQgaW50byBPT1Agc3R5bGUNCicgd2hlcmUgZWFjaCB0eXBlIHdpbGwgaGF2ZSBhIGNsYXNzIHdpdGggcmVuZGVyKCksIGdldFZhbHVlKCkgZXRjLi4uDQoNCicgY29udmVydCBhIHZhbHVlIHR5cGUgbnVtYmVyIGludG8gYSBzdHJpbmcgbGFiZWwNCkZ1bmN0aW9uIFJlbmRlclR5cGUoaW50VHlwZSkNCglSZW5kZXJUeXBlID0gIlJFR19VTktOT1dOIg0KDQoJU2VsZWN0IENhc2UgaW50VHlwZQ0KCQlDYXNlIDANCgkJCVJlbmRlclR5cGUgPSAiUkVHX05PTkUiDQoJCUNhc2UgMQ0KCQkJUmVuZGVyVHlwZSA9ICJSRUdfU1oiDQoJCUNhc2UgMg0KCQkJUmVuZGVyVHlwZSA9ICJSRUdfRVhQQU5EX1NaIg0KCQlDYXNlIDMNCgkJCVJlbmRlclR5cGUgPSAiUkVHX0JJTkFSWSINCgkJQ2FzZSA0DQoJCQlSZW5kZXJUeXBlID0gIlJFR19EV09SRCINCgkJQ2FzZSA3DQoJCQlSZW5kZXJUeXBlID0gIlJFR19NVUxUSV9TWiINCgkJQ2FzZSAxMQkNCgkJCVJlbmRlclR5cGUgPSAiUkVHX1FXT1JEIg0KCQlDYXNlIEVsc2UNCgkJCScgVE9ETzogc2hvdWxkIHJlcG9ydCAvIHRocm93IGFuIGVycm9yIGhlcmUNCgkJCVdyaXRlRXJyKCJpbnZhbGlkIFJlZ2lzdHJ5IFZhbHVlIFR5cGUgIiAmIGludFR5cGUpDQoNCglFbmQgU2VsZWN0DQoNCkVuZCBGdW5jdGlvbg0KDQonIHJlbmRlciBieSB2YWx1ZSB0eXBlOg0KJyBzdHJpbmcgd2lsbCByZXR1cm4gYXMgYSBzdHJpbmcgd2l0aCBkb3VibGUgcXVvdGVzLCBlLmcgInZhbHVlIg0KJyBtdWx0aSBzdHJpbmcgdmFsdWVzIHdoaWNoIHJldHVybiBhcyBhbiBhcnJheSBvdCBzdHJpbmdzICJbIjEiLCAiMiJdIiAoZG91YmxlIHF1b3RlcyBpbmNsdWRlZCBvZmMpDQonIG51bWVyaWMgdmFsdWVzIGxpa2UgRFdPUkQgYW5kIFFXT1JEIGp1c3QgcmV0dXJuIGFzIHRoZSBudW1iZXIgZS5nLiAxDQonIGJ5dGUgYXJyYXlzIHN1Y2ggYXMgcmVnX2JpbmFyeSByZXR1cm4gYXMgYW4gYXJyYXkgb2YgaW50cywgZS5nIFsxLDIsM10NCkZ1bmN0aW9uIFJlbmRlclZhbHVlQnlUeXBlKGludFR5cGUsIHZhclZhbHVlKQ0KDQoJU2VsZWN0IENhc2UgaW50VHlwZQ0KCQknIFJFR19OT05FDQoJCUNhc2UgMA0KCQkJUmVuZGVyVmFsdWVCeVR5cGUgPSAiMCINCg0KCQknIFJFR19TWg0KCQlDYXNlIDENCgkJCVJlbmRlclZhbHVlQnlUeXBlID0gIiIiIiAmIEpzb25TYWZlKHZhclZhbHVlKSAmICIiIiINCg0KCQknIFJFR19FWFBBTkRfU1oNCgkJQ2FzZSAyDQoJCQlSZW5kZXJWYWx1ZUJ5VHlwZSA9ICIiIiIgJiBKc29uU2FmZSh2YXJWYWx1ZSkgJiAiIiIiDQoNCgkJJyBSRUdfQklOQVJZDQoJCUNhc2UgMw0KCQkJUmVuZGVyVmFsdWVCeVR5cGUgPSBSZW5kZXJCeXRlQXJyYXkodmFyVmFsdWUpDQoNCgkJJyBSRUdfRFdPUkQNCgkJQ2FzZSA0DQoJCQlSZW5kZXJWYWx1ZUJ5VHlwZT0gdmFyVmFsdWUNCg0KCQknIFJFR19NVUxZSV9TWicNCgkJQ2FzZSA3DQoNCgkJCVJlbmRlclZhbHVlQnlUeXBlID0gUmVuZGVyU3RyaW5nQXJyYXkodmFyVmFsdWUpDQoJCScgUkVHX1FXT1JEDQoJCUNhc2UgMTENCgkJCVJlbmRlclZhbHVlQnlUeXBlID0gdmFyVmFsdWUNCgkJQ2FzZSBFbHNlDQoJCQknIFRPRE86IHNob3VsZCByZXBvcnQgLyB0aHJvdyBhbiBlcnJvciBoZXJlDQoJCQlXcml0ZUVycigiaW52YWxpZCBSZWdpc3RyeSBWYWx1ZSBUeXBlICIgJiBpbnRUeXBlKQ0KCUVuZCBTZWxlY3QNCg0KRW5kIEZ1bmN0aW9uDQoNCicgZ2V0IHRoZSB2YWx1ZSBvZiBhIHJlZ2lzdHJ5IGJhc2VkIG9uIGl0cyB2YWx1ZSB0eXBlIGFuZCBhc3NpZ24gaXQgdG8gb3V0IHBhcmFtZXRlciBvdXRWYXJWYWx1ZQ0KU3ViIEdldFZhbHVlQnlUeXBlKGNvbnN0SGl2ZSwgc3RyS2V5LCBzdHJWYWx1ZU5hbWUsIGludFR5cGUsIG91dFZhclZhbHVlKQ0KDQoJU2VsZWN0IENhc2UgaW50VHlwZQ0KCQknIFJFR19OT05FDQoJCUNhc2UgMA0KCQkJR2V0U3RyaW5nVmFsdWUgY29uc3RIaXZlLCBzdHJLZXksIHN0clZhbHVlTmFtZSwgIjAiDQoJCQlFeGl0IFN1Yg0KDQoJCScgUkVHX1NaDQoJCUNhc2UgMQ0KCQkJR2V0U3RyaW5nVmFsdWUgY29uc3RIaXZlLCBzdHJLZXksIHN0clZhbHVlTmFtZSwgb3V0VmFyVmFsdWUNCgkJCUV4aXQgU3ViDQoNCgkJJyBSRUdfRVhQQU5EX1NaDQoJCUNhc2UgMg0KCQkJR2V0RXhwYW5kZWRTdHJpbmdWYWx1ZSBjb25zdEhpdmUsIHN0cktleSwgc3RyVmFsdWVOYW1lLCBvdXRWYXJWYWx1ZQkJCQ0KCQkJRXhpdCBTdWINCgkJCQ0KCQknIFJFR19CSU5BUlkNCgkJQ2FzZSAzDQoJCQlHZXRCaW5hcnlWYWx1ZSBjb25zdEhpdmUsIHN0cktleSwgc3RyVmFsdWVOYW1lLCBvdXRWYXJWYWx1ZQ0KCQkJRXhpdCBTdWINCgkJCQ0KCQknIFJFR19EV09SRA0KCQlDYXNlIDQNCgkJCUdldERXT1JEVmFsdWUgY29uc3RIaXZlLCBzdHJLZXksIHN0clZhbHVlTmFtZSwgb3V0VmFyVmFsdWUNCg0KCQkJJyAjMjEgLSBWQlMgZG9lcyBub3Qgc3VwcG9ydCBVSW50MzIuIFRoaXMgaXMgdGhlIHdvcmthcm91bmQNCgkJCUlmIG91dFZhclZhbHVlIDwgMCBUaGVuIG91dFZhclZhbHVlID0gNDI5NDk2NzI5NiArIG91dFZhclZhbHVlDQoNCgkJCUV4aXQgU3ViDQoJCQkNCgkJJyBSRUdfTVVMWUlfU1onDQoJCUNhc2UgNw0KCQkJR2V0TXVsdGlTdHJpbmdWYWx1ZSBjb25zdEhpdmUsIHN0cktleSwgc3RyVmFsdWVOYW1lLCBvdXRWYXJWYWx1ZQ0KCQkJRXhpdCBTdWINCgkJCQ0KCQknIFJFR19RV09SRA0KCQlDYXNlIDExCQ0KCQkJR2V0UVdPUkRWYWx1ZSBjb25zdEhpdmUsIHN0cktleSwgc3RyVmFsdWVOYW1lLCBvdXRWYXJWYWx1ZQ0KCQkJRXhpdCBTdWINCgkJDQoJCUNhc2UgRWxzZQ0KCQkJJyBUT0RPOiBzaG91bGQgcmVwb3J0IC8gdGhyb3cgYW4gZXJyb3IgaGVyZQ0KCQkJV3JpdGVFcnIoImludmFsaWQgUmVnaXN0cnkgVmFsdWUgVHlwZSAiICYgaW50VHlwZSkJDQoJRW5kIFNlbGVjdA0KDQpFbmQgU3ViDQoNCicgcmVuZGVyIGEgYnl0ZSBhcnJheSBhcyBhIGpzb24gYXJyYXkgb2YgbnVtYmVycw0KRnVuY3Rpb24gUmVuZGVyQnl0ZUFycmF5KGFycikNCglSZW5kZXJCeXRlQXJyYXkgPSAiW10iDQoNCglJZiBOb3QgSXNOdWxsKGFycikgVGhlbgkJDQoJCVJlbmRlckJ5dGVBcnJheSA9ICJbIiAmIEpvaW4oYXJyLCAiLCIpICYgIl0iDQoJRW5kIElmDQpFbmQgRnVuY3Rpb24NCg0KJyByZW5kZXIgYSBzdHJpbmcgYXJyYXkgYXMganNvbiBzdHJpbmcgYXJyYXkNCkZ1bmN0aW9uIFJlbmRlclN0cmluZ0FycmF5KGFycikJDQoJUmVzdWx0ID0gIlsiDQoJSWYgTm90IElzTnVsbChhcnIpIFRoZW4NCgkJRm9yIHQgPSAwIFRvIFVCb3VuZChhcnIpDQoJCQlJZiAodCA+IDApIFRoZW4NCgkJCQlSZXN1bHQgPSBSZXN1bHQgJiAgIiwiDQoJCQlFbmQgSWYNCg0KCQkJUmVzdWx0ID0gUmVzdWx0ICYgIiIiIiAmIEpzb25TYWZlKGFycih0KSkgJiAiIiIiDQoJCU5leHQNCglFbmQgSWYNCglSZXN1bHQgPSBSZXN1bHQgJiAiXSINCg0KCVJlbmRlclN0cmluZ0FycmF5ID0gUmVzdWx0DQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gVG9CaW5hcnlWYWx1ZShzdHJWYWx1ZSkNCg0KCWFyclZhbHVlID0gU3BsaXQoc3RyVmFsdWUsICIsIikNCgkNCglJZiBJc051bGwoYXJyVmFsdWUpIFRoZW4JCQ0KCQlUb0JpbmFyeVZhbHVlID0gQXJyYXkoKQ0KCQlFeGl0IEZ1bmN0aW9uDQoJRW5kIElmDQoNCglGb3IgaSA9IDAgVG8gVUJvdW5kKGFyclZhbHVlKQ0KCQlhcnJWYWx1ZShpKSA9IENJbnQoYXJyVmFsdWUoaSkpDQoJTmV4dA0KDQoJVG9CaW5hcnlWYWx1ZSA9IGFyclZhbHVlDQpFbmQgRnVuY3Rpb24=\",\"util.vbs\":\"U2V0IHN0ZG91dCA9IFdTY3JpcHQuU3RkT3V0DQpTZXQgc3RkZXJyID0gV1NjcmlwdC5TdGRFcnINClNldCBzdGRpbiA9IFdTY3JpcHQuU3RkSW4NClNldCBhcmdzID0gV1NjcmlwdC5Bcmd1bWVudHMNClNldCBmcyA9IENyZWF0ZU9iamVjdCgic2NyaXB0aW5nLmZpbGVzeXN0ZW1vYmplY3QiKSANCkRpbSBPU0FyY2hpdGVjdHVyZQ0KDQpTdWIgV3JpdGVFcnIobWVzc2FnZSkNCglzdGRlcnIuV3JpdGUgbWVzc2FnZQ0KRW5kIFN1Yg0KDQpTdWIgV3JpdGVMaW5lRXJyKG1lc3NhZ2UpDQoJc3RkZXJyLldyaXRlTGluZSBtZXNzYWdlDQpFbmQgU3ViDQoNClN1YiBXcml0ZShtZXNzYWdlKQ0KCXN0ZG91dC5Xcml0ZSBtZXNzYWdlDQpFbmQgU3ViDQoNClN1YiBXcml0ZUxpbmUobWVzc2FnZSkNCglzdGRvdXQuV3JpdGVMaW5lIG1lc3NhZ2UNCkVuZCBTdWINCg0KRnVuY3Rpb24gSW5kZXhPZih2YXJOZWVkbGUsIGFyckhheXN0YWNrKQ0KCUluZGV4T2YgPSAtMQ0KCQ0KCUlmIE5vdCBJc0FycmF5KGFyckhheXN0YWNrKQkgVGhlbg0KCQlFeGl0IEZ1bmN0aW9uDQoJRW5kIElmDQoNCglGb3IgeHl6ID0gMCBUbyBVQm91bmQoYXJySGF5c3RhY2spDQoJCUlmIGFyckhheXN0YWNrKHh5eikgPSB2YXJOZWVkbGUgVGhlbg0KCQkJSW5kZXhPZiA9IHh5eg0KCQkJRXhpdCBGdW5jdGlvbg0KCQlFbmQgSWYNCglOZXh0DQpFbmQgRnVuY3Rpb24NCg0KU3ViIENoZWNrWmVyb0FyZ3MobWVzc2FnZSkNCgknIGJhaWwgaWYgYXJncyBhcmUgbWlzc2luZw0KCUlmIGFyZ3MuQ291bnQgPSAwIFRoZW4NCgkJV3JpdGVMaW5lRXJyIG1lc3NhZ2UNCgkJV1NjcmlwdC5RdWl0IDI1MTIxDQoJRW5kIElmDQpFbmQgU3ViDQoNCkRpbSBBTExPV0VEX09TX0FSQ0hJVEVDVFVSRV9WQUxVRVM6IEFMTE9XRURfT1NfQVJDSElURUNUVVJFX1ZBTFVFUyA9IEFycmF5KCJTIiwgIkEiLCAiMzIiLCAiNjQiKQ0KDQonDQonCWRldGVybWluZSB0aGUgYXJjaGl0ZWN0dXJlIG9mIHRoZSBvcGVyYXRpbmcgc3lzdGVtLCB0aGF0IHdpbGwgYmUgdXNlZC4gdGhlcmUgYXJlIDQgcG9zc2liaWxpdGllczoNCicJQSAtIG1lYW5zIGFnbm9zdGljDQonCVMgLSBtZWFucyB0aGF0IHdlIHdhbnQgdG8gdXNlIGEgc3BlY2lmaWMgYXJjaGl0ZWN0dXJlLCBidXQgYXV0byBkZXRlY3QgSXRlbQ0KJwkzMiAtIGV4cGxpY2l0bHkgdXNlIDMyIGJpdCBhcmNoaXRlY3R1cmUNCicJNjQgLSBleHBsaWNpdGx5IHVzZSA2NCBiaXQgYXJjaGl0ZWN0dXJlDQonDQpTdWIgRGV0ZXJtaW5lT1NBcmNoaXRlY3R1cmUoKQ0KCXN0ckFyY2hpdGVjdHVyZSA9IGFyZ3MoMCkNCg0KCUlmIElzTnVsbChzdHJBcmNoaXRlY3R1cmUpIFRoZW4NCgkJV3JpdGVMaW5lRXJyICJtaXNzaW5nIGFyY2hpdGVjdHVyZSBhcmd1bWVudCINCgkJV1NjcmlwdC5RdWl0IDI1MTI0DQoJRW5kIElmDQoNCglzdHJBcmNoaXRlY3R1cmUgPSBVQ2FzZShzdHJBcmNoaXRlY3R1cmUpDQoNCglJZiBJbmRleE9mKHN0ckFyY2hpdGVjdHVyZSwgQUxMT1dFRF9PU19BUkNISVRFQ1RVUkVfVkFMVUVTKSA9IC0xIFRoZW4NCgkJV3JpdGVMaW5lRXJyICJpbnZhbGlkIGFyY2hpdGVjdHVyZSBhcmd1bWVudCINCgkJV1NjcmlwdC5RdWl0IDI1MTI0DQoJRW5kIElmDQoNCglJZiAoc3RyQXJjaGl0ZWN0dXJlID0gIlMiKSBUaGVuDQoJCU9TQXJjaGl0ZWN0dXJlID0gR2V0T1NBcmNoaXRlY3R1cmUoKQ0KCQlJZiBPU0FyY2hpdGVjdHVyZSA9IC0xIFRoZW4NCgkJCVdyaXRlTGluZUVyciAiaW52YWxpZCBvcyBhcmNoaXRlY3R1cmUgZGV0ZWN0ZWQgIiAmIE9TQXJjaGl0ZWN0dXJlDQoJCQlXU2NyaXB0LlF1aXQgMjUxMjYNCgkJRW5kIElmDQoJRWxzZQ0KCQlPU0FyY2hpdGVjdHVyZSA9IHN0ckFyY2hpdGVjdHVyZQ0KCUVuZCBJZg0KDQpFbmQgU3ViDQoNClN1YiBJbmNsdWRlKHNQYXRoKQ0KCScgVE9ETyB0aGlzIGlzIGZyYWdpbGUsIGJ1dCBzaG91bGQgd29yayBmb3IgIm1vZHVsZXMiIG5lc3RlZCByZWxhdGl2ZWx5IHRvIHNjcmlwdCByb290DQoJaW5jbHVkZV9TY3JpcHRQYXRoID0gTGVmdChXU2NyaXB0LlNjcmlwdEZ1bGxOYW1lLCBJblN0cihXU2NyaXB0LlNjcmlwdEZ1bGxOYW1lLCBXU2NyaXB0LlNjcmlwdE5hbWUpIC0gMikJDQoJc1BhdGggPSBpbmNsdWRlX1NjcmlwdFBhdGggJiAiXCIgJiBzUGF0aA0KCQ0KCWluY2x1ZGVfY29kZSA9IGZzLk9wZW5UZXh0RmlsZShzUGF0aCkuUmVhZEFsbCAJDQoJRXhlY3V0ZUdsb2JhbCBpbmNsdWRlX2NvZGUNCkVuZCBTdWINCg0KRnVuY3Rpb24gR2V0T1NBcmNoaXRlY3R1cmUoKQ0KDQoJRGltIE9ialdNSSwgQ29sU2V0dGluZ3MsIE9ialByb2Nlc3NvciANCglEaW0gU3RyQ29tcHV0ZXIsIE9iak5ldHdvcmsgDQoJDQoJU2V0IE9ialdNSSA9IEdldE9iamVjdCgid2lubWdtdHM6XFJvb3RcQ0lNVjIiKSANCglTZXQgQ29sU2V0dGluZ3MgPSBPYmpXTUkuRXhlY1F1ZXJ5ICgiU0VMRUNUIERhdGFXaWR0aCwgQWRkcmVzc1dpZHRoLCBBcmNoaXRlY3R1cmUgRlJPTSBXaW4zMl9Qcm9jZXNzb3IiKSANCg0KCScgVE9ETzogSSBtYWtlIHR3byBhc3N1bXB0aW9ucyBoZXJlOiANCgknIDEuIEV2ZXlvbmUgd2lsbCBoYXZlIENQVTAgZGV2aWNlDQoJJyAyLiBUaGVyZSBpcyBvbmx5IG9uZSBjcHUgZGVmaW5lZCBpbiB0aGUgd21pIGRhdGFiYXNlIChhbmQgaWYgbm90LCB0aGVuIHRoZXkgYXJlIGFsbCBvZiB0aGUgc2FtZSBhcmNoaXRlY3R1cmUpDQoJU2V0IE9ialByb2Nlc3NvciA9IENvbFNldHRpbmdzLkl0ZW0oIldpbjMyX1Byb2Nlc3Nvci5EZXZpY2VJRD0iIkNQVTAiIiIpDQoNCglJZiBPYmpQcm9jZXNzb3IuQXJjaGl0ZWN0dXJlID0gMCBBTkQgT2JqUHJvY2Vzc29yLkFkZHJlc3NXaWR0aCA9IDMyIFRoZW4gDQoJCUdldE9TQXJjaGl0ZWN0dXJlID0gMzINCglFbHNlSWYgKE9ialByb2Nlc3Nvci5BcmNoaXRlY3R1cmUgPSA2IE9SIE9ialByb2Nlc3Nvci5BcmNoaXRlY3R1cmUgPSA5KSBBTkQgT2JqUHJvY2Vzc29yLkRhdGFXaWR0aCA9IDY0IEFORCBPYmpQcm9jZXNzb3IuQWRkcmVzc1dpZHRoID0gMzIgVGhlbiANCgkJR2V0T1NBcmNoaXRlY3R1cmUgPSAzMg0KCUVsc2VJZiAoT2JqUHJvY2Vzc29yLkFyY2hpdGVjdHVyZSA9IDYgT1IgT2JqUHJvY2Vzc29yLkFyY2hpdGVjdHVyZSA9IDkpIEFORCBPYmpQcm9jZXNzb3IuRGF0YVdpZHRoID0gNjQgQU5EIE9ialByb2Nlc3Nvci5BZGRyZXNzV2lkdGggPSA2NCBUaGVuIA0KCQlHZXRPU0FyY2hpdGVjdHVyZSA9IDY0DQoJRWxzZQkJDQoJCUdldE9TQXJjaGl0ZWN0dXJlID0gLTENCglFbmQgSWYgDQoJDQpFbmQgRnVuY3Rpb24NCg0KRnVuY3Rpb24gSnNvblNhZmUoaW5TdHJUZXh0KQ0KCUlmIGluU3RyVGV4dCA9ICIiIFRoZW4NCgkJSnNvblNhZmUgPSAiIg0KCQlFeGl0IEZ1bmN0aW9uIA0KCUVuZCBJZg0KCURpbSBvdXRTdHJUZXh0OiBvdXRTdHJUZXh0ID0gaW5TdHJUZXh0DQoJb3V0U3RyVGV4dCA9IFJlcGxhY2Uob3V0U3RyVGV4dCwgIlwiLCAiXFwiKQ0KCW91dFN0clRleHQgPSBSZXBsYWNlKG91dFN0clRleHQsIHZiY3JsZiwgIlxcclxcbiIpDQoJb3V0U3RyVGV4dCA9IFJlcGxhY2Uob3V0U3RyVGV4dCwgdmJsZiwgIlxcbiIpDQoJb3V0U3RyVGV4dCA9IFJlcGxhY2Uob3V0U3RyVGV4dCwgdmJjciwgIlxcciIpDQoJb3V0U3RyVGV4dCA9IFJlcGxhY2Uob3V0U3RyVGV4dCwgIiIiIiwgIlwiIiIpCQ0KCW91dFN0clRleHQgPSBKc29uVShvdXRTdHJUZXh0KQ0KCUpzb25TYWZlID0gb3V0U3RyVGV4dA0KRW5kIEZ1bmN0aW9uDQoNCidUT0RPOiBuZWVkIHRvIGNoYW5nZSB0aGlzIGZ1bmN0aW9uJ3MgbmFtZSB0byBzb21ldGhpbmcgbW9yZSBhcHByb3ByaWF0ZQ0KRnVuY3Rpb24gSnNvblUoYXN0cikNCgkNCglJZiBpc051bGwoYXN0cikgVGhlbg0KCQlKc29uVSA9ICIiDQoJCUV4aXQgRnVuY3Rpb24NCglFbmQgSWYNCg0KCURpbSBjIA0KCURpbSB1dGZ0ZXh0OiB1dGZ0ZXh0ID0gIiINCgkNCglGb3IgbiA9IDEgVG8gTGVuKGFzdHIpDQoJCWMgPSBDTG5nKEFzY1coTWlkKGFzdHIsIG4sIDEpKSkNCg0KCQlJZiBjIDwgMCBUaGVuDQoJCQljID0gJkgxMDAwMCArIGMNCgkJRW5kIElmDQoNCgkJSWYgYyA8ICZIODAgVGhlbg0KCQkJdXRmdGV4dCA9IHV0ZnRleHQgJiBNaWQoYXN0ciwgbiwgMSkNCgkJRWxzZUlmIGMgPCAmSDEwMCBUaGVuDQoJCQl1dGZ0ZXh0ID0gdXRmdGV4dCAmICJcdTAwIiAmIEhleChjKQ0KCQlFbHNlSWYgYyA8ICZIMTAwMCBUaGVuDQoJCQl1dGZ0ZXh0ID0gdXRmdGV4dCAmICJcdTAiICYgSGV4KGMpDQoJCUVsc2UNCgkJCXV0ZnRleHQgPSB1dGZ0ZXh0ICYgIlx1IiAmIEhleChjKQ0KCQlFbmQgSWYNCglOZXh0DQoNCglKc29uVSA9IHV0ZnRleHQNCkVuZCBGdW5jdGlvbg0K\",\"wsRegReadList.wsf\":\"JyANCicJTGlzdHMgdGhlIHZhbHVlcyBvZiBhIGdpdmVuIHJlZ2lzdHJ5IHBhdGgsIHRoaXMgc2NyaXB0IHRha2VzIGl0cyBpbnB1dCBmcm9tIHN0ZGluDQonDQonCWNzY3JpcHQgcmVnTGlzdFN0cmVhbS53c2YgQSAiSEtDVVxcU29mdHdhcmVcXE1pY3Jvc29mdFxcV2luZG93c1xcQ3VycmVudFZlcnNpb25cXEV4cGxvcmVyXFxVc2VyIFNoZWxsIEZvbGRlcnNcXEFwcERhdGEiDQonDQonCVdpbGwgWWllbGQ6DQonDQonCXsNCicJCSJIS0NVXFxTb2Z0d2FyZVxcTWljcm9zb2Z0XFxXaW5kb3dzXFxDdXJyZW50VmVyc2lvblxcRXhwbG9yZXJcXFVzZXIgU2hlbGwgRm9sZGVyc1xcQXBwRGF0YSI6ICJ2YWx1ZSBoZXJlIg0KJwl9DQo8am9iIGlkPSJyZWdSZWFkIj4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCIgc3JjPSJ1dGlsLnZicyIgLz4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCIgc3JjPSJyZWdVdGlsLnZicyIgLz4NCgk8c2NyaXB0IGxhbmd1YWdlPSJWQlNjcmlwdCI+DQoJCUNoZWNrWmVyb0FyZ3MoInVzYWdlOiBjc2NyaXB0IHdzUmVnUmVhZC53c2YgYXJjaGl0ZWN0dXJlIHBhdGgxLi4ucGF0aE4iKQ0KCQlEZXRlcm1pbmVPU0FyY2hpdGVjdHVyZSgpDQoJCUxvYWRSZWdpc3RyeUltcGxlbWVudGF0aW9uQnlPU0FyY2hpdGVjdHVyZSgpDQoJCQ0KCQlzZXQgd3MgPSBjcmVhdGVvYmplY3QoIldzY3JpcHQuc2hlbGwiKQ0KCQ0KCQlXcml0ZSAiWyINCgkJT24gRXJyb3IgUmVzdW1lIE5leHQNCgkJRm9yIHYgPSAxIFRvIGFyZ3MuQ291bnQgLSAxDQoJCQlJZiAodiA+IDEpIFRoZW4NCgkJCQlXcml0ZSAiLCINCgkJCUVuZCBJZg0KDQoJCQlEaW0ga2V5OiBrZXkgPSB0cmltKGFyZ3ModikpDQoJCQkNCgkJCScgbm90IHJlYWxseSBuZWVkZWQgZXhjZXB0IGZvciB2YWxpZGF0aW9uDQoJCQlQYXJzZUhpdmVBbmRTdWJLZXlBbmRWYWx1ZSBrZXksIGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZQ0KDQoJCQlpZiBJc051bGwoY29uc3RIaXZlKSBUaGVuDQoJCQkJV3JpdGVMaW5lRXJyICJ1bnN1cHBvcnRlZCBoaXZlICIgJiBhcmdzKHYpDQoJCQkJV1NjcmlwdC5RdWl0IDI1MTIyDQoJCQlFbmQgSWYNCgkJCQ0KCQkJV3JpdGUgInsgIiJwYXRoIiIgOiAiIiIgJiBKc29uU2FmZShrZXkpICYgIiIiLCAiDQoJCQkNCgkJCURpbSByZXN1bHQ6CXJlc3VsdCA9IHdzLlJlZ1JlYWQoYXJncyh2KSkNCgkJCURpbSBleGlzdHM6IGV4aXN0cyA9ICJ0cnVlIg0KDQoJCQlJZiBFcnIuTnVtYmVyIDw+IDAgVGhlbg0KCQkJCWV4aXN0cyA9ICJmYWxzZSINCgkJCUVuZCBpZg0KDQoJCQlXcml0ZSAiIiJleGlzdHMiIjogIiAmIGV4aXN0cyAmICIsICINCgkJCVdyaXRlICIiInZhbHVlIiI6ICIiIiAmICBKc29uU2FmZShyZXN1bHQpICYgIiIifSIgJiB2YmNybGYNCgkJTmV4dA0KCQlXcml0ZSAiXSINCgk8L3NjcmlwdD4NCjwvam9iPg==\",\"wsRegReadListStream.wsf\":\"JyANCicJTGlzdHMgdGhlIHZhbHVlcyBvZiBhIGdpdmVuIHJlZ2lzdHJ5IHBhdGgsIHRoaXMgc2NyaXB0IHRha2VzIGl0cyBpbnB1dCBmcm9tIHN0ZGluDQonDQonCWVjaG8gSEtDVVxcU29mdHdhcmVcXE1pY3Jvc29mdFxcV2luZG93c1xcQ3VycmVudFZlcnNpb25cXEV4cGxvcmVyXFxVc2VyIFNoZWxsIEZvbGRlcnNcXEFwcERhdGEgfCBjc2NyaXB0IHJlZ0xpc3RTdHJlYW0ud3NmIEENCicNCicJV2lsbCBZaWVsZDoNCicNCicJew0KJwkJIkhLQ1VcXFNvZnR3YXJlXFxNaWNyb3NvZnRcXFdpbmRvd3NcXEN1cnJlbnRWZXJzaW9uXFxFeHBsb3JlclxcVXNlciBTaGVsbCBGb2xkZXJzXFxBcHBEYXRhIjogInZhbHVlIGhlcmUiDQonCX0NCjxqb2IgaWQ9InJlZ1JlYWQiPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0IiBzcmM9InV0aWwudmJzIiAvPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0IiBzcmM9InJlZ1V0aWwudmJzIiAvPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IlZCU2NyaXB0Ij4NCgkJQ2hlY2taZXJvQXJncygidXNhZ2U6IGVjaG8gS0VZIHwgY3NjcmlwdCB3c1JlZ1JlYWQud3NmIGFyY2hpdGVjdHVyZSIpDQoJCURldGVybWluZU9TQXJjaGl0ZWN0dXJlKCkNCgkJTG9hZFJlZ2lzdHJ5SW1wbGVtZW50YXRpb25CeU9TQXJjaGl0ZWN0dXJlKCkNCgkJDQoJCXNldCB3cyA9IGNyZWF0ZW9iamVjdCgiV3NjcmlwdC5zaGVsbCIpDQoJDQoJCURvIFdoaWxlIE5vdCBzdGRpbi5BdEVuZE9mTGluZQ0KDQoJCQlzdHJMaW5lID0gc3RkaW4uUmVhZExpbmUoKQ0KCQkJc3RyTGluZSA9IHVuZXNjYXBlKHRyaW0oc3RyTGluZSkpDQoJCQ0KCQkJJyBub3QgcmVhbGx5IG5lZWRlZCBleGNlcHQgZm9yIHZhbGlkYXRpb24NCgkJCVBhcnNlSGl2ZUFuZFN1YktleUFuZFZhbHVlIHN0ckxpbmUsIGNvbnN0SGl2ZSwgc3RyU3ViS2V5LCBzdHJWYWx1ZQ0KDQoJCQlpZiBJc051bGwoY29uc3RIaXZlKSBUaGVuDQoJCQkJV3JpdGVMaW5lRXJyICJ1bnN1cHBvcnRlZCBoaXZlICIgJiBzdHJMaW5lDQoJCQkJV1NjcmlwdC5RdWl0IDI1MTIyICAgICAgIA0KCQkJRW5kIElmDQoJCQkNCgkJCVdyaXRlICJ7ICIicGF0aCIiIDogIiIiICYgSnNvblNhZmUoc3RyTGluZSkgJiAiIiIsICINCg0KCQkJRGltIHJlc3VsdDogcmVzdWx0ID0gd3MuUmVnUmVhZChzdHJMaW5lKQ0KCQkJRGltIGV4aXN0czogZXhpc3RzID0gInRydWUiDQoNCgkJCUlmIEVyci5OdW1iZXIgPD4gMCBUaGVuDQoJCQkJZXhpc3RzID0gImZhbHNlIg0KCQkJRW5kIGlmDQoJCQkNCgkJCVdyaXRlICIiImV4aXN0cyIiOiAiICYgZXhpc3RzICYgIiwgIg0KCQkJV3JpdGUgIiIidmFsdWUiIjogIiIiICYgIEpzb25TYWZlKHJlc3VsdCkgJiAiIiJ9IiAmIHZiY3JsZg0KCQlMb29wDQoJPC9zY3JpcHQ+DQo8L2pvYj4=\"}""

module.exports = { data }